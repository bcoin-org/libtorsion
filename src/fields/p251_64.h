/* Autogenerated: /src/ExtractionOCaml/unsaturated_solinas --static p251 64 5 '2^251 - 9' carry_mul carry_square carry add sub opp selectznz to_bytes from_bytes */
/* curve description: p251 */
/* machine_wordsize = 64 (from "64") */
/* requested operations: carry_mul, carry_square, carry, add, sub, opp, selectznz, to_bytes, from_bytes */
/* n = 5 (from "5") */
/* s-c = 2^251 - [(1, 9)] (from "2^251 - 9") */
/* tight_bounds_multiplier = 1.1 (from "") */
/*  */
/* Computed values: */
/* carry_chain = [0, 1, 2, 3, 4, 0, 1] */
/* eval z = z[0] + (z[1] << 51) + (z[2] << 101) + (z[3] << 151) + (z[4] << 201) */
/* bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248) */

#include <stdint.h>
typedef unsigned char fiat_p251_uint1;
typedef signed char fiat_p251_int1;
typedef torsion_int128_t fiat_p251_int128;
typedef torsion_uint128_t fiat_p251_uint128;

#if (-1 & 3) != 3
#error "This code only works on a two's complement system"
#endif


/*
 * The function fiat_p251_addcarryx_u50 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^50
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^50⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x3ffffffffffff]
 *   arg3: [0x0 ~> 0x3ffffffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x3ffffffffffff]
 *   out2: [0x0 ~> 0x1]
 */
static void fiat_p251_addcarryx_u50(uint64_t* out1, fiat_p251_uint1* out2, fiat_p251_uint1 arg1, uint64_t arg2, uint64_t arg3) {
  uint64_t x1;
  uint64_t x2;
  fiat_p251_uint1 x3;
  x1 = ((arg1 + arg2) + arg3);
  x2 = (x1 & UINT64_C(0x3ffffffffffff));
  x3 = (fiat_p251_uint1)(x1 >> 50);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p251_subborrowx_u50 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^50
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^50⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x3ffffffffffff]
 *   arg3: [0x0 ~> 0x3ffffffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x3ffffffffffff]
 *   out2: [0x0 ~> 0x1]
 */
static void fiat_p251_subborrowx_u50(uint64_t* out1, fiat_p251_uint1* out2, fiat_p251_uint1 arg1, uint64_t arg2, uint64_t arg3) {
  int64_t x1;
  fiat_p251_int1 x2;
  uint64_t x3;
  x1 = ((int64_t)(arg2 - (int64_t)arg1) - (int64_t)arg3);
  x2 = (fiat_p251_int1)(x1 >> 50);
  x3 = (x1 & UINT64_C(0x3ffffffffffff));
  *out1 = x3;
  *out2 = (fiat_p251_uint1)(0x0 - x2);
}

/*
 * The function fiat_p251_addcarryx_u51 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^51
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^51⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x7ffffffffffff]
 *   arg3: [0x0 ~> 0x7ffffffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x7ffffffffffff]
 *   out2: [0x0 ~> 0x1]
 */
static void fiat_p251_addcarryx_u51(uint64_t* out1, fiat_p251_uint1* out2, fiat_p251_uint1 arg1, uint64_t arg2, uint64_t arg3) {
  uint64_t x1;
  uint64_t x2;
  fiat_p251_uint1 x3;
  x1 = ((arg1 + arg2) + arg3);
  x2 = (x1 & UINT64_C(0x7ffffffffffff));
  x3 = (fiat_p251_uint1)(x1 >> 51);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p251_subborrowx_u51 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^51
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^51⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x7ffffffffffff]
 *   arg3: [0x0 ~> 0x7ffffffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x7ffffffffffff]
 *   out2: [0x0 ~> 0x1]
 */
static void fiat_p251_subborrowx_u51(uint64_t* out1, fiat_p251_uint1* out2, fiat_p251_uint1 arg1, uint64_t arg2, uint64_t arg3) {
  int64_t x1;
  fiat_p251_int1 x2;
  uint64_t x3;
  x1 = ((int64_t)(arg2 - (int64_t)arg1) - (int64_t)arg3);
  x2 = (fiat_p251_int1)(x1 >> 51);
  x3 = (x1 & UINT64_C(0x7ffffffffffff));
  *out1 = x3;
  *out2 = (fiat_p251_uint1)(0x0 - x2);
}

/*
 * The function fiat_p251_cmovznz_u64 is a single-word conditional move.
 * Postconditions:
 *   out1 = (if arg1 = 0 then arg2 else arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffffffffffff]
 *   arg3: [0x0 ~> 0xffffffffffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffffffffffff]
 */
static void fiat_p251_cmovznz_u64(uint64_t* out1, fiat_p251_uint1 arg1, uint64_t arg2, uint64_t arg3) {
  fiat_p251_uint1 x1;
  uint64_t x2;
  uint64_t x3;
  x1 = (!(!arg1));
  x2 = ((fiat_p251_int1)(0x0 - x1) & UINT64_C(0xffffffffffffffff));
  x3 = ((fiat_barrier(x2) & arg3) | (fiat_barrier(~x2) & arg2));
  *out1 = x3;
}

/*
 * The function fiat_p251_carry_mul multiplies two field elements and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x1a666666666664], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332]]
 *   arg2: [[0x0 ~> 0x1a666666666664], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 */
static void fiat_p251_carry_mul(uint64_t out1[5], const uint64_t arg1[5], const uint64_t arg2[5]) {
  fiat_p251_uint128 x1;
  fiat_p251_uint128 x2;
  fiat_p251_uint128 x3;
  fiat_p251_uint128 x4;
  fiat_p251_uint128 x5;
  fiat_p251_uint128 x6;
  fiat_p251_uint128 x7;
  fiat_p251_uint128 x8;
  fiat_p251_uint128 x9;
  fiat_p251_uint128 x10;
  fiat_p251_uint128 x11;
  fiat_p251_uint128 x12;
  fiat_p251_uint128 x13;
  fiat_p251_uint128 x14;
  fiat_p251_uint128 x15;
  fiat_p251_uint128 x16;
  fiat_p251_uint128 x17;
  fiat_p251_uint128 x18;
  fiat_p251_uint128 x19;
  fiat_p251_uint128 x20;
  fiat_p251_uint128 x21;
  fiat_p251_uint128 x22;
  fiat_p251_uint128 x23;
  fiat_p251_uint128 x24;
  fiat_p251_uint128 x25;
  fiat_p251_uint128 x26;
  uint64_t x27;
  uint64_t x28;
  fiat_p251_uint128 x29;
  fiat_p251_uint128 x30;
  fiat_p251_uint128 x31;
  fiat_p251_uint128 x32;
  fiat_p251_uint128 x33;
  uint64_t x34;
  uint64_t x35;
  fiat_p251_uint128 x36;
  uint64_t x37;
  uint64_t x38;
  fiat_p251_uint128 x39;
  uint64_t x40;
  uint64_t x41;
  fiat_p251_uint128 x42;
  uint64_t x43;
  uint64_t x44;
  uint64_t x45;
  uint64_t x46;
  uint64_t x47;
  uint64_t x48;
  uint64_t x49;
  fiat_p251_uint1 x50;
  uint64_t x51;
  uint64_t x52;
  x1 = ((fiat_p251_uint128)(arg1[4]) * ((arg2[4]) * 0x9));
  x2 = ((fiat_p251_uint128)(arg1[4]) * ((arg2[3]) * 0x9));
  x3 = ((fiat_p251_uint128)(arg1[4]) * ((arg2[2]) * 0x9));
  x4 = ((fiat_p251_uint128)(arg1[4]) * ((arg2[1]) * UINT8_C(0x12)));
  x5 = ((fiat_p251_uint128)(arg1[3]) * ((arg2[4]) * 0x9));
  x6 = ((fiat_p251_uint128)(arg1[3]) * ((arg2[3]) * 0x9));
  x7 = ((fiat_p251_uint128)(arg1[3]) * ((arg2[2]) * UINT8_C(0x12)));
  x8 = ((fiat_p251_uint128)(arg1[2]) * ((arg2[4]) * 0x9));
  x9 = ((fiat_p251_uint128)(arg1[2]) * ((arg2[3]) * UINT8_C(0x12)));
  x10 = ((fiat_p251_uint128)(arg1[1]) * ((arg2[4]) * UINT8_C(0x12)));
  x11 = ((fiat_p251_uint128)(arg1[4]) * (arg2[0]));
  x12 = ((fiat_p251_uint128)(arg1[3]) * ((arg2[1]) * 0x2));
  x13 = ((fiat_p251_uint128)(arg1[3]) * (arg2[0]));
  x14 = ((fiat_p251_uint128)(arg1[2]) * ((arg2[2]) * 0x2));
  x15 = ((fiat_p251_uint128)(arg1[2]) * ((arg2[1]) * 0x2));
  x16 = ((fiat_p251_uint128)(arg1[2]) * (arg2[0]));
  x17 = ((fiat_p251_uint128)(arg1[1]) * ((arg2[3]) * 0x2));
  x18 = ((fiat_p251_uint128)(arg1[1]) * ((arg2[2]) * 0x2));
  x19 = ((fiat_p251_uint128)(arg1[1]) * ((arg2[1]) * 0x2));
  x20 = ((fiat_p251_uint128)(arg1[1]) * (arg2[0]));
  x21 = ((fiat_p251_uint128)(arg1[0]) * (arg2[4]));
  x22 = ((fiat_p251_uint128)(arg1[0]) * (arg2[3]));
  x23 = ((fiat_p251_uint128)(arg1[0]) * (arg2[2]));
  x24 = ((fiat_p251_uint128)(arg1[0]) * (arg2[1]));
  x25 = ((fiat_p251_uint128)(arg1[0]) * (arg2[0]));
  x26 = (x25 + (x10 + (x9 + (x7 + x4))));
  x27 = (uint64_t)(x26 >> 51);
  x28 = (uint64_t)(x26 & UINT64_C(0x7ffffffffffff));
  x29 = (x21 + (x17 + (x14 + (x12 + x11))));
  x30 = (x22 + (x18 + (x15 + (x13 + x1))));
  x31 = (x23 + (x19 + (x16 + (x5 + x2))));
  x32 = (x24 + (x20 + (x8 + (x6 + x3))));
  x33 = (x27 + x32);
  x34 = (uint64_t)(x33 >> 50);
  x35 = (uint64_t)(x33 & UINT64_C(0x3ffffffffffff));
  x36 = (x34 + x31);
  x37 = (uint64_t)(x36 >> 50);
  x38 = (uint64_t)(x36 & UINT64_C(0x3ffffffffffff));
  x39 = (x37 + x30);
  x40 = (uint64_t)(x39 >> 50);
  x41 = (uint64_t)(x39 & UINT64_C(0x3ffffffffffff));
  x42 = (x40 + x29);
  x43 = (uint64_t)(x42 >> 50);
  x44 = (uint64_t)(x42 & UINT64_C(0x3ffffffffffff));
  x45 = (x43 * 0x9);
  x46 = (x28 + x45);
  x47 = (x46 >> 51);
  x48 = (x46 & UINT64_C(0x7ffffffffffff));
  x49 = (x47 + x35);
  x50 = (fiat_p251_uint1)(x49 >> 50);
  x51 = (x49 & UINT64_C(0x3ffffffffffff));
  x52 = (x50 + x38);
  out1[0] = x48;
  out1[1] = x51;
  out1[2] = x52;
  out1[3] = x41;
  out1[4] = x44;
}

/*
 * The function fiat_p251_carry_square squares a field element and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * eval arg1) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x1a666666666664], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 */
static void fiat_p251_carry_square(uint64_t out1[5], const uint64_t arg1[5]) {
  uint64_t x1;
  uint64_t x2;
  uint64_t x3;
  uint64_t x4;
  uint64_t x5;
  uint64_t x6;
  uint64_t x7;
  uint64_t x8;
  fiat_p251_uint128 x9;
  fiat_p251_uint128 x10;
  fiat_p251_uint128 x11;
  fiat_p251_uint128 x12;
  fiat_p251_uint128 x13;
  fiat_p251_uint128 x14;
  fiat_p251_uint128 x15;
  fiat_p251_uint128 x16;
  fiat_p251_uint128 x17;
  fiat_p251_uint128 x18;
  fiat_p251_uint128 x19;
  fiat_p251_uint128 x20;
  fiat_p251_uint128 x21;
  fiat_p251_uint128 x22;
  fiat_p251_uint128 x23;
  fiat_p251_uint128 x24;
  uint64_t x25;
  uint64_t x26;
  fiat_p251_uint128 x27;
  fiat_p251_uint128 x28;
  fiat_p251_uint128 x29;
  fiat_p251_uint128 x30;
  fiat_p251_uint128 x31;
  uint64_t x32;
  uint64_t x33;
  fiat_p251_uint128 x34;
  uint64_t x35;
  uint64_t x36;
  fiat_p251_uint128 x37;
  uint64_t x38;
  uint64_t x39;
  fiat_p251_uint128 x40;
  uint64_t x41;
  uint64_t x42;
  uint64_t x43;
  uint64_t x44;
  uint64_t x45;
  uint64_t x46;
  uint64_t x47;
  fiat_p251_uint1 x48;
  uint64_t x49;
  uint64_t x50;
  x1 = ((arg1[4]) * 0x9);
  x2 = (x1 * 0x2);
  x3 = ((arg1[4]) * 0x2);
  x4 = ((arg1[3]) * 0x9);
  x5 = (x4 * 0x2);
  x6 = ((arg1[3]) * 0x2);
  x7 = ((arg1[2]) * 0x2);
  x8 = ((arg1[1]) * 0x2);
  x9 = ((fiat_p251_uint128)(arg1[4]) * x1);
  x10 = ((fiat_p251_uint128)(arg1[3]) * x2);
  x11 = ((fiat_p251_uint128)(arg1[3]) * x4);
  x12 = ((fiat_p251_uint128)(arg1[2]) * x2);
  x13 = ((fiat_p251_uint128)(arg1[2]) * (x5 * 0x2));
  x14 = ((fiat_p251_uint128)(arg1[2]) * ((arg1[2]) * 0x2));
  x15 = ((fiat_p251_uint128)(arg1[1]) * (x2 * 0x2));
  x16 = ((fiat_p251_uint128)(arg1[1]) * (x6 * 0x2));
  x17 = ((fiat_p251_uint128)(arg1[1]) * (x7 * 0x2));
  x18 = ((fiat_p251_uint128)(arg1[1]) * ((arg1[1]) * 0x2));
  x19 = ((fiat_p251_uint128)(arg1[0]) * x3);
  x20 = ((fiat_p251_uint128)(arg1[0]) * x6);
  x21 = ((fiat_p251_uint128)(arg1[0]) * x7);
  x22 = ((fiat_p251_uint128)(arg1[0]) * x8);
  x23 = ((fiat_p251_uint128)(arg1[0]) * (arg1[0]));
  x24 = (x23 + (x15 + x13));
  x25 = (uint64_t)(x24 >> 51);
  x26 = (uint64_t)(x24 & UINT64_C(0x7ffffffffffff));
  x27 = (x19 + (x16 + x14));
  x28 = (x20 + (x17 + x9));
  x29 = (x21 + (x18 + x10));
  x30 = (x22 + (x12 + x11));
  x31 = (x25 + x30);
  x32 = (uint64_t)(x31 >> 50);
  x33 = (uint64_t)(x31 & UINT64_C(0x3ffffffffffff));
  x34 = (x32 + x29);
  x35 = (uint64_t)(x34 >> 50);
  x36 = (uint64_t)(x34 & UINT64_C(0x3ffffffffffff));
  x37 = (x35 + x28);
  x38 = (uint64_t)(x37 >> 50);
  x39 = (uint64_t)(x37 & UINT64_C(0x3ffffffffffff));
  x40 = (x38 + x27);
  x41 = (uint64_t)(x40 >> 50);
  x42 = (uint64_t)(x40 & UINT64_C(0x3ffffffffffff));
  x43 = (x41 * 0x9);
  x44 = (x26 + x43);
  x45 = (x44 >> 51);
  x46 = (x44 & UINT64_C(0x7ffffffffffff));
  x47 = (x45 + x33);
  x48 = (fiat_p251_uint1)(x47 >> 50);
  x49 = (x47 & UINT64_C(0x3ffffffffffff));
  x50 = (x48 + x36);
  out1[0] = x46;
  out1[1] = x49;
  out1[2] = x50;
  out1[3] = x39;
  out1[4] = x42;
}

/*
 * The function fiat_p251_carry reduces a field element.
 * Postconditions:
 *   eval out1 mod m = eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x1a666666666664], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 */
static void fiat_p251_carry(uint64_t out1[5], const uint64_t arg1[5]) {
  uint64_t x1;
  uint64_t x2;
  uint64_t x3;
  uint64_t x4;
  uint64_t x5;
  uint64_t x6;
  uint64_t x7;
  uint64_t x8;
  uint64_t x9;
  uint64_t x10;
  uint64_t x11;
  uint64_t x12;
  x1 = (arg1[0]);
  x2 = ((x1 >> 51) + (arg1[1]));
  x3 = ((x2 >> 50) + (arg1[2]));
  x4 = ((x3 >> 50) + (arg1[3]));
  x5 = ((x4 >> 50) + (arg1[4]));
  x6 = ((x1 & UINT64_C(0x7ffffffffffff)) + ((x5 >> 50) * 0x9));
  x7 = ((fiat_p251_uint1)(x6 >> 51) + (x2 & UINT64_C(0x3ffffffffffff)));
  x8 = (x6 & UINT64_C(0x7ffffffffffff));
  x9 = (x7 & UINT64_C(0x3ffffffffffff));
  x10 = ((fiat_p251_uint1)(x7 >> 50) + (x3 & UINT64_C(0x3ffffffffffff)));
  x11 = (x4 & UINT64_C(0x3ffffffffffff));
  x12 = (x5 & UINT64_C(0x3ffffffffffff));
  out1[0] = x8;
  out1[1] = x9;
  out1[2] = x10;
  out1[3] = x11;
  out1[4] = x12;
}

/*
 * The function fiat_p251_add adds two field elements.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 + eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 *   arg2: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x1a666666666664], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332]]
 */
static void fiat_p251_add(uint64_t out1[5], const uint64_t arg1[5], const uint64_t arg2[5]) {
  uint64_t x1;
  uint64_t x2;
  uint64_t x3;
  uint64_t x4;
  uint64_t x5;
  x1 = ((arg1[0]) + (arg2[0]));
  x2 = ((arg1[1]) + (arg2[1]));
  x3 = ((arg1[2]) + (arg2[2]));
  x4 = ((arg1[3]) + (arg2[3]));
  x5 = ((arg1[4]) + (arg2[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/*
 * The function fiat_p251_sub subtracts two field elements.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 - eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 *   arg2: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x1a666666666664], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332]]
 */
static void fiat_p251_sub(uint64_t out1[5], const uint64_t arg1[5], const uint64_t arg2[5]) {
  uint64_t x1;
  uint64_t x2;
  uint64_t x3;
  uint64_t x4;
  uint64_t x5;
  x1 = ((UINT64_C(0xfffffffffffee) + (arg1[0])) - (arg2[0]));
  x2 = ((UINT64_C(0x7fffffffffffe) + (arg1[1])) - (arg2[1]));
  x3 = ((UINT64_C(0x7fffffffffffe) + (arg1[2])) - (arg2[2]));
  x4 = ((UINT64_C(0x7fffffffffffe) + (arg1[3])) - (arg2[3]));
  x5 = ((UINT64_C(0x7fffffffffffe) + (arg1[4])) - (arg2[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/*
 * The function fiat_p251_opp negates a field element.
 * Postconditions:
 *   eval out1 mod m = -eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x1a666666666664], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332], [0x0 ~> 0xd333333333332]]
 */
static void fiat_p251_opp(uint64_t out1[5], const uint64_t arg1[5]) {
  uint64_t x1;
  uint64_t x2;
  uint64_t x3;
  uint64_t x4;
  uint64_t x5;
  x1 = (UINT64_C(0xfffffffffffee) - (arg1[0]));
  x2 = (UINT64_C(0x7fffffffffffe) - (arg1[1]));
  x3 = (UINT64_C(0x7fffffffffffe) - (arg1[2]));
  x4 = (UINT64_C(0x7fffffffffffe) - (arg1[3]));
  x5 = (UINT64_C(0x7fffffffffffe) - (arg1[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/*
 * The function fiat_p251_selectznz is a multi-limb conditional select.
 * Postconditions:
 *   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 *   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
static void fiat_p251_selectznz(uint64_t out1[5], fiat_p251_uint1 arg1, const uint64_t arg2[5], const uint64_t arg3[5]) {
  uint64_t x1;
  uint64_t x2;
  uint64_t x3;
  uint64_t x4;
  uint64_t x5;
  fiat_p251_cmovznz_u64(&x1, arg1, (arg2[0]), (arg3[0]));
  fiat_p251_cmovznz_u64(&x2, arg1, (arg2[1]), (arg3[1]));
  fiat_p251_cmovznz_u64(&x3, arg1, (arg2[2]), (arg3[2]));
  fiat_p251_cmovznz_u64(&x4, arg1, (arg2[3]), (arg3[3]));
  fiat_p251_cmovznz_u64(&x5, arg1, (arg2[4]), (arg3[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/*
 * The function fiat_p251_to_bytes serializes a field element to bytes in little-endian order.
 * Postconditions:
 *   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..31]
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7]]
 */
static void fiat_p251_to_bytes(uint8_t out1[32], const uint64_t arg1[5]) {
  uint64_t x1;
  fiat_p251_uint1 x2;
  uint64_t x3;
  fiat_p251_uint1 x4;
  uint64_t x5;
  fiat_p251_uint1 x6;
  uint64_t x7;
  fiat_p251_uint1 x8;
  uint64_t x9;
  fiat_p251_uint1 x10;
  uint64_t x11;
  uint64_t x12;
  fiat_p251_uint1 x13;
  uint64_t x14;
  fiat_p251_uint1 x15;
  uint64_t x16;
  fiat_p251_uint1 x17;
  uint64_t x18;
  fiat_p251_uint1 x19;
  uint64_t x20;
  fiat_p251_uint1 x21;
  uint64_t x22;
  uint64_t x23;
  uint64_t x24;
  uint64_t x25;
  uint64_t x26;
  uint8_t x27;
  uint64_t x28;
  uint8_t x29;
  uint64_t x30;
  uint8_t x31;
  uint64_t x32;
  uint8_t x33;
  uint64_t x34;
  uint8_t x35;
  uint8_t x36;
  uint8_t x37;
  uint64_t x38;
  uint64_t x39;
  uint8_t x40;
  uint64_t x41;
  uint8_t x42;
  uint64_t x43;
  uint8_t x44;
  uint64_t x45;
  uint8_t x46;
  uint64_t x47;
  uint8_t x48;
  uint8_t x49;
  uint8_t x50;
  uint64_t x51;
  uint64_t x52;
  uint8_t x53;
  uint64_t x54;
  uint8_t x55;
  uint64_t x56;
  uint8_t x57;
  uint64_t x58;
  uint8_t x59;
  uint64_t x60;
  uint8_t x61;
  uint8_t x62;
  uint8_t x63;
  uint64_t x64;
  uint64_t x65;
  uint8_t x66;
  uint64_t x67;
  uint8_t x68;
  uint64_t x69;
  uint8_t x70;
  uint64_t x71;
  uint8_t x72;
  uint64_t x73;
  uint8_t x74;
  uint64_t x75;
  uint8_t x76;
  fiat_p251_uint1 x77;
  uint8_t x78;
  uint64_t x79;
  uint64_t x80;
  uint8_t x81;
  uint64_t x82;
  uint8_t x83;
  uint64_t x84;
  uint8_t x85;
  uint64_t x86;
  uint8_t x87;
  uint64_t x88;
  uint8_t x89;
  uint8_t x90;
  uint8_t x91;
  fiat_p251_subborrowx_u51(&x1, &x2, 0x0, (arg1[0]), UINT64_C(0x7fffffffffff7));
  fiat_p251_subborrowx_u50(&x3, &x4, x2, (arg1[1]), UINT64_C(0x3ffffffffffff));
  fiat_p251_subborrowx_u50(&x5, &x6, x4, (arg1[2]), UINT64_C(0x3ffffffffffff));
  fiat_p251_subborrowx_u50(&x7, &x8, x6, (arg1[3]), UINT64_C(0x3ffffffffffff));
  fiat_p251_subborrowx_u50(&x9, &x10, x8, (arg1[4]), UINT64_C(0x3ffffffffffff));
  fiat_p251_cmovznz_u64(&x11, x10, 0x0, UINT64_C(0xffffffffffffffff));
  fiat_p251_addcarryx_u51(&x12, &x13, 0x0, x1, (x11 & UINT64_C(0x7fffffffffff7)));
  fiat_p251_addcarryx_u50(&x14, &x15, x13, x3, (x11 & UINT64_C(0x3ffffffffffff)));
  fiat_p251_addcarryx_u50(&x16, &x17, x15, x5, (x11 & UINT64_C(0x3ffffffffffff)));
  fiat_p251_addcarryx_u50(&x18, &x19, x17, x7, (x11 & UINT64_C(0x3ffffffffffff)));
  fiat_p251_addcarryx_u50(&x20, &x21, x19, x9, (x11 & UINT64_C(0x3ffffffffffff)));
  x22 = (x20 * (uint64_t)0x2);
  x23 = (x18 << 7);
  x24 = (x16 << 5);
  x25 = (x14 << 3);
  x26 = (x12 >> 8);
  x27 = (uint8_t)(x12 & UINT8_C(0xff));
  x28 = (x26 >> 8);
  x29 = (uint8_t)(x26 & UINT8_C(0xff));
  x30 = (x28 >> 8);
  x31 = (uint8_t)(x28 & UINT8_C(0xff));
  x32 = (x30 >> 8);
  x33 = (uint8_t)(x30 & UINT8_C(0xff));
  x34 = (x32 >> 8);
  x35 = (uint8_t)(x32 & UINT8_C(0xff));
  x36 = (uint8_t)(x34 >> 8);
  x37 = (uint8_t)(x34 & UINT8_C(0xff));
  x38 = (x36 + x25);
  x39 = (x38 >> 8);
  x40 = (uint8_t)(x38 & UINT8_C(0xff));
  x41 = (x39 >> 8);
  x42 = (uint8_t)(x39 & UINT8_C(0xff));
  x43 = (x41 >> 8);
  x44 = (uint8_t)(x41 & UINT8_C(0xff));
  x45 = (x43 >> 8);
  x46 = (uint8_t)(x43 & UINT8_C(0xff));
  x47 = (x45 >> 8);
  x48 = (uint8_t)(x45 & UINT8_C(0xff));
  x49 = (uint8_t)(x47 >> 8);
  x50 = (uint8_t)(x47 & UINT8_C(0xff));
  x51 = (x49 + x24);
  x52 = (x51 >> 8);
  x53 = (uint8_t)(x51 & UINT8_C(0xff));
  x54 = (x52 >> 8);
  x55 = (uint8_t)(x52 & UINT8_C(0xff));
  x56 = (x54 >> 8);
  x57 = (uint8_t)(x54 & UINT8_C(0xff));
  x58 = (x56 >> 8);
  x59 = (uint8_t)(x56 & UINT8_C(0xff));
  x60 = (x58 >> 8);
  x61 = (uint8_t)(x58 & UINT8_C(0xff));
  x62 = (uint8_t)(x60 >> 8);
  x63 = (uint8_t)(x60 & UINT8_C(0xff));
  x64 = (x62 + x23);
  x65 = (x64 >> 8);
  x66 = (uint8_t)(x64 & UINT8_C(0xff));
  x67 = (x65 >> 8);
  x68 = (uint8_t)(x65 & UINT8_C(0xff));
  x69 = (x67 >> 8);
  x70 = (uint8_t)(x67 & UINT8_C(0xff));
  x71 = (x69 >> 8);
  x72 = (uint8_t)(x69 & UINT8_C(0xff));
  x73 = (x71 >> 8);
  x74 = (uint8_t)(x71 & UINT8_C(0xff));
  x75 = (x73 >> 8);
  x76 = (uint8_t)(x73 & UINT8_C(0xff));
  x77 = (fiat_p251_uint1)(x75 >> 8);
  x78 = (uint8_t)(x75 & UINT8_C(0xff));
  x79 = (x77 + x22);
  x80 = (x79 >> 8);
  x81 = (uint8_t)(x79 & UINT8_C(0xff));
  x82 = (x80 >> 8);
  x83 = (uint8_t)(x80 & UINT8_C(0xff));
  x84 = (x82 >> 8);
  x85 = (uint8_t)(x82 & UINT8_C(0xff));
  x86 = (x84 >> 8);
  x87 = (uint8_t)(x84 & UINT8_C(0xff));
  x88 = (x86 >> 8);
  x89 = (uint8_t)(x86 & UINT8_C(0xff));
  x90 = (uint8_t)(x88 >> 8);
  x91 = (uint8_t)(x88 & UINT8_C(0xff));
  out1[0] = x27;
  out1[1] = x29;
  out1[2] = x31;
  out1[3] = x33;
  out1[4] = x35;
  out1[5] = x37;
  out1[6] = x40;
  out1[7] = x42;
  out1[8] = x44;
  out1[9] = x46;
  out1[10] = x48;
  out1[11] = x50;
  out1[12] = x53;
  out1[13] = x55;
  out1[14] = x57;
  out1[15] = x59;
  out1[16] = x61;
  out1[17] = x63;
  out1[18] = x66;
  out1[19] = x68;
  out1[20] = x70;
  out1[21] = x72;
  out1[22] = x74;
  out1[23] = x76;
  out1[24] = x78;
  out1[25] = x81;
  out1[26] = x83;
  out1[27] = x85;
  out1[28] = x87;
  out1[29] = x89;
  out1[30] = x91;
  out1[31] = x90;
}

/*
 * The function fiat_p251_from_bytes deserializes a field element from bytes in little-endian order.
 * Postconditions:
 *   eval out1 mod m = bytes_eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x8cccccccccccc], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666], [0x0 ~> 0x4666666666666]]
 */
static void fiat_p251_from_bytes(uint64_t out1[5], const uint8_t arg1[32]) {
  uint64_t x1;
  uint64_t x2;
  uint64_t x3;
  uint64_t x4;
  uint64_t x5;
  uint64_t x6;
  uint64_t x7;
  uint64_t x8;
  uint64_t x9;
  uint64_t x10;
  uint64_t x11;
  uint64_t x12;
  uint64_t x13;
  uint64_t x14;
  uint64_t x15;
  uint64_t x16;
  uint64_t x17;
  uint64_t x18;
  uint64_t x19;
  uint64_t x20;
  uint64_t x21;
  uint64_t x22;
  uint64_t x23;
  uint64_t x24;
  uint64_t x25;
  uint64_t x26;
  uint64_t x27;
  uint64_t x28;
  uint64_t x29;
  uint64_t x30;
  uint64_t x31;
  uint8_t x32;
  uint64_t x33;
  uint8_t x34;
  uint64_t x35;
  uint64_t x36;
  uint64_t x37;
  uint64_t x38;
  uint64_t x39;
  uint64_t x40;
  uint8_t x41;
  uint64_t x42;
  uint64_t x43;
  fiat_p251_uint1 x44;
  uint64_t x45;
  uint64_t x46;
  uint8_t x47;
  uint64_t x48;
  uint64_t x49;
  x1 = ((uint64_t)(arg1[31]) << 47);
  x2 = ((uint64_t)(arg1[30]) << 39);
  x3 = ((uint64_t)(arg1[29]) << 31);
  x4 = ((uint64_t)(arg1[28]) << 23);
  x5 = ((uint64_t)(arg1[27]) << 15);
  x6 = ((uint64_t)(arg1[26]) << 7);
  x7 = ((uint64_t)(arg1[25]) << 49);
  x8 = ((uint64_t)(arg1[24]) << 41);
  x9 = ((uint64_t)(arg1[23]) << 33);
  x10 = ((uint64_t)(arg1[22]) << 25);
  x11 = ((uint64_t)(arg1[21]) << 17);
  x12 = ((uint64_t)(arg1[20]) << 9);
  x13 = ((uint64_t)(arg1[19]) * 0x2);
  x14 = ((uint64_t)(arg1[18]) << 43);
  x15 = ((uint64_t)(arg1[17]) << 35);
  x16 = ((uint64_t)(arg1[16]) << 27);
  x17 = ((uint64_t)(arg1[15]) << 19);
  x18 = ((uint64_t)(arg1[14]) << 11);
  x19 = ((uint64_t)(arg1[13]) << 3);
  x20 = ((uint64_t)(arg1[12]) << 45);
  x21 = ((uint64_t)(arg1[11]) << 37);
  x22 = ((uint64_t)(arg1[10]) << 29);
  x23 = ((uint64_t)(arg1[9]) << 21);
  x24 = ((uint64_t)(arg1[8]) << 13);
  x25 = ((uint64_t)(arg1[7]) << 5);
  x26 = ((uint64_t)(arg1[6]) << 48);
  x27 = ((uint64_t)(arg1[5]) << 40);
  x28 = ((uint64_t)(arg1[4]) << 32);
  x29 = ((uint64_t)(arg1[3]) << 24);
  x30 = ((uint64_t)(arg1[2]) << 16);
  x31 = ((uint64_t)(arg1[1]) << 8);
  x32 = (arg1[0]);
  x33 = (x32 + (x31 + (x30 + (x29 + (x28 + (x27 + x26))))));
  x34 = (uint8_t)(x33 >> 51);
  x35 = (x33 & UINT64_C(0x7ffffffffffff));
  x36 = (x6 + (x5 + (x4 + (x3 + (x2 + x1)))));
  x37 = (x13 + (x12 + (x11 + (x10 + (x9 + (x8 + x7))))));
  x38 = (x19 + (x18 + (x17 + (x16 + (x15 + x14)))));
  x39 = (x25 + (x24 + (x23 + (x22 + (x21 + x20)))));
  x40 = (x34 + x39);
  x41 = (uint8_t)(x40 >> 50);
  x42 = (x40 & UINT64_C(0x3ffffffffffff));
  x43 = (x41 + x38);
  x44 = (fiat_p251_uint1)(x43 >> 50);
  x45 = (x43 & UINT64_C(0x3ffffffffffff));
  x46 = (x44 + x37);
  x47 = (uint8_t)(x46 >> 50);
  x48 = (x46 & UINT64_C(0x3ffffffffffff));
  x49 = (x47 + x36);
  out1[0] = x35;
  out1[1] = x42;
  out1[2] = x45;
  out1[3] = x48;
  out1[4] = x49;
}
