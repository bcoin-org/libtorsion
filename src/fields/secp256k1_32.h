/* Autogenerated: /src/ExtractionOCaml/unsaturated_solinas --static --tight-bounds-mul-by 1.1 secp256k1 32 12 '2^256 - 2^32 - 977' add sub opp carry carry_mul carry_square carry_scmul3 carry_scmul4 carry_scmul8 selectznz to_bytes from_bytes */
/* curve description: secp256k1 */
/* machine_wordsize = 32 (from "32") */
/* requested operations: add, sub, opp, carry, carry_mul, carry_square, carry_scmul3, carry_scmul4, carry_scmul8, selectznz, to_bytes, from_bytes */
/* n = 12 (from "12") */
/* s-c = 2^256 - [(2^32, 1), (1, 977)] (from "2^256 - 2^32 - 977") */
/* tight_bounds_multiplier = 1.1 (from "1.1") */
/*  */
/* Computed values: */
/* carry_chain = [0, 11, 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 0] */
/* eval z = z[0] + (z[1] << 22) + (z[2] << 43) + (z[3] << 64) + (z[4] << 86) + (z[5] << 107) + (z[6] << 128) + (z[7] << 150) + (z[8] << 171) + (z[9] << 192) + (z[10] << 214) + (z[11] << 235) */
/* bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248) */
/* balance = [0x7ff85e, 0x3ff7fe, 0x3ffffe, 0x7ffffe, 0x3ffffe, 0x3ffffe, 0x7ffffe, 0x3ffffe, 0x3ffffe, 0x7ffffe, 0x3ffffe, 0x3ffffe] */

#include <stdint.h>
typedef unsigned char fiat_secp256k1_uint1;
typedef signed char fiat_secp256k1_int1;

#if (-1 & 3) != 3
#error "This code only works on a two's complement system"
#endif


/*
 * The function fiat_secp256k1_addcarryx_u22 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^22
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^22⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x3fffff]
 *   arg3: [0x0 ~> 0x3fffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x3fffff]
 *   out2: [0x0 ~> 0x1]
 */
static void fiat_secp256k1_addcarryx_u22(uint32_t* out1, fiat_secp256k1_uint1* out2, fiat_secp256k1_uint1 arg1, uint32_t arg2, uint32_t arg3) {
  uint32_t x1;
  uint32_t x2;
  fiat_secp256k1_uint1 x3;
  x1 = ((arg1 + arg2) + arg3);
  x2 = (x1 & UINT32_C(0x3fffff));
  x3 = (fiat_secp256k1_uint1)(x1 >> 22);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_secp256k1_subborrowx_u22 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^22
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^22⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x3fffff]
 *   arg3: [0x0 ~> 0x3fffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x3fffff]
 *   out2: [0x0 ~> 0x1]
 */
static void fiat_secp256k1_subborrowx_u22(uint32_t* out1, fiat_secp256k1_uint1* out2, fiat_secp256k1_uint1 arg1, uint32_t arg2, uint32_t arg3) {
  int32_t x1;
  fiat_secp256k1_int1 x2;
  uint32_t x3;
  x1 = ((int32_t)(arg2 - arg1) - (int32_t)arg3);
  x2 = (fiat_secp256k1_int1)(x1 >> 22);
  x3 = (x1 & UINT32_C(0x3fffff));
  *out1 = x3;
  *out2 = (fiat_secp256k1_uint1)(0x0 - x2);
}

/*
 * The function fiat_secp256k1_addcarryx_u21 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^21
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^21⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x1fffff]
 *   arg3: [0x0 ~> 0x1fffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x1fffff]
 *   out2: [0x0 ~> 0x1]
 */
static void fiat_secp256k1_addcarryx_u21(uint32_t* out1, fiat_secp256k1_uint1* out2, fiat_secp256k1_uint1 arg1, uint32_t arg2, uint32_t arg3) {
  uint32_t x1;
  uint32_t x2;
  fiat_secp256k1_uint1 x3;
  x1 = ((arg1 + arg2) + arg3);
  x2 = (x1 & UINT32_C(0x1fffff));
  x3 = (fiat_secp256k1_uint1)(x1 >> 21);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_secp256k1_subborrowx_u21 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^21
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^21⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x1fffff]
 *   arg3: [0x0 ~> 0x1fffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x1fffff]
 *   out2: [0x0 ~> 0x1]
 */
static void fiat_secp256k1_subborrowx_u21(uint32_t* out1, fiat_secp256k1_uint1* out2, fiat_secp256k1_uint1 arg1, uint32_t arg2, uint32_t arg3) {
  int32_t x1;
  fiat_secp256k1_int1 x2;
  uint32_t x3;
  x1 = ((int32_t)(arg2 - arg1) - (int32_t)arg3);
  x2 = (fiat_secp256k1_int1)(x1 >> 21);
  x3 = (x1 & UINT32_C(0x1fffff));
  *out1 = x3;
  *out2 = (fiat_secp256k1_uint1)(0x0 - x2);
}

/*
 * The function fiat_secp256k1_cmovznz_u32 is a single-word conditional move.
 * Postconditions:
 *   out1 = (if arg1 = 0 then arg2 else arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 */
static void fiat_secp256k1_cmovznz_u32(uint32_t* out1, fiat_secp256k1_uint1 arg1, uint32_t arg2, uint32_t arg3) {
  fiat_secp256k1_uint1 x1;
  uint32_t x2;
  uint32_t x3;
  x1 = (!(!arg1));
  x2 = ((fiat_secp256k1_int1)(0x0 - x1) & UINT32_C(0xffffffff));
  x3 = ((fe_word_barrier(x2) & arg3) | (fe_word_barrier(~x2) & arg2));
  *out1 = x3;
}

/*
 * The function fiat_secp256k1_add adds two field elements.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 + eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 *   arg2: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 */
static void fiat_secp256k1_add(uint32_t out1[12], const uint32_t arg1[12], const uint32_t arg2[12]) {
  uint32_t x1;
  uint32_t x2;
  uint32_t x3;
  uint32_t x4;
  uint32_t x5;
  uint32_t x6;
  uint32_t x7;
  uint32_t x8;
  uint32_t x9;
  uint32_t x10;
  uint32_t x11;
  uint32_t x12;
  x1 = ((arg1[0]) + (arg2[0]));
  x2 = ((arg1[1]) + (arg2[1]));
  x3 = ((arg1[2]) + (arg2[2]));
  x4 = ((arg1[3]) + (arg2[3]));
  x5 = ((arg1[4]) + (arg2[4]));
  x6 = ((arg1[5]) + (arg2[5]));
  x7 = ((arg1[6]) + (arg2[6]));
  x8 = ((arg1[7]) + (arg2[7]));
  x9 = ((arg1[8]) + (arg2[8]));
  x10 = ((arg1[9]) + (arg2[9]));
  x11 = ((arg1[10]) + (arg2[10]));
  x12 = ((arg1[11]) + (arg2[11]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
  out1[10] = x11;
  out1[11] = x12;
}

/*
 * The function fiat_secp256k1_sub subtracts two field elements.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 - eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 *   arg2: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 */
static void fiat_secp256k1_sub(uint32_t out1[12], const uint32_t arg1[12], const uint32_t arg2[12]) {
  uint32_t x1;
  uint32_t x2;
  uint32_t x3;
  uint32_t x4;
  uint32_t x5;
  uint32_t x6;
  uint32_t x7;
  uint32_t x8;
  uint32_t x9;
  uint32_t x10;
  uint32_t x11;
  uint32_t x12;
  x1 = ((UINT32_C(0x7ff85e) + (arg1[0])) - (arg2[0]));
  x2 = ((UINT32_C(0x3ff7fe) + (arg1[1])) - (arg2[1]));
  x3 = ((UINT32_C(0x3ffffe) + (arg1[2])) - (arg2[2]));
  x4 = ((UINT32_C(0x7ffffe) + (arg1[3])) - (arg2[3]));
  x5 = ((UINT32_C(0x3ffffe) + (arg1[4])) - (arg2[4]));
  x6 = ((UINT32_C(0x3ffffe) + (arg1[5])) - (arg2[5]));
  x7 = ((UINT32_C(0x7ffffe) + (arg1[6])) - (arg2[6]));
  x8 = ((UINT32_C(0x3ffffe) + (arg1[7])) - (arg2[7]));
  x9 = ((UINT32_C(0x3ffffe) + (arg1[8])) - (arg2[8]));
  x10 = ((UINT32_C(0x7ffffe) + (arg1[9])) - (arg2[9]));
  x11 = ((UINT32_C(0x3ffffe) + (arg1[10])) - (arg2[10]));
  x12 = ((UINT32_C(0x3ffffe) + (arg1[11])) - (arg2[11]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
  out1[10] = x11;
  out1[11] = x12;
}

/*
 * The function fiat_secp256k1_opp negates a field element.
 * Postconditions:
 *   eval out1 mod m = -eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 */
static void fiat_secp256k1_opp(uint32_t out1[12], const uint32_t arg1[12]) {
  uint32_t x1;
  uint32_t x2;
  uint32_t x3;
  uint32_t x4;
  uint32_t x5;
  uint32_t x6;
  uint32_t x7;
  uint32_t x8;
  uint32_t x9;
  uint32_t x10;
  uint32_t x11;
  uint32_t x12;
  x1 = (UINT32_C(0x7ff85e) - (arg1[0]));
  x2 = (UINT32_C(0x3ff7fe) - (arg1[1]));
  x3 = (UINT32_C(0x3ffffe) - (arg1[2]));
  x4 = (UINT32_C(0x7ffffe) - (arg1[3]));
  x5 = (UINT32_C(0x3ffffe) - (arg1[4]));
  x6 = (UINT32_C(0x3ffffe) - (arg1[5]));
  x7 = (UINT32_C(0x7ffffe) - (arg1[6]));
  x8 = (UINT32_C(0x3ffffe) - (arg1[7]));
  x9 = (UINT32_C(0x3ffffe) - (arg1[8]));
  x10 = (UINT32_C(0x7ffffe) - (arg1[9]));
  x11 = (UINT32_C(0x3ffffe) - (arg1[10]));
  x12 = (UINT32_C(0x3ffffe) - (arg1[11]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
  out1[10] = x11;
  out1[11] = x12;
}

/*
 * The function fiat_secp256k1_carry reduces a field element.
 * Postconditions:
 *   eval out1 mod m = eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 */
static void fiat_secp256k1_carry(uint32_t out1[12], const uint32_t arg1[12]) {
  uint32_t x1;
  uint32_t x2;
  uint32_t x3;
  uint32_t x4;
  uint32_t x5;
  uint32_t x6;
  uint32_t x7;
  uint32_t x8;
  uint32_t x9;
  uint32_t x10;
  uint32_t x11;
  uint32_t x12;
  uint32_t x13;
  uint32_t x14;
  uint32_t x15;
  fiat_secp256k1_uint1 x16;
  uint32_t x17;
  uint32_t x18;
  uint32_t x19;
  uint32_t x20;
  uint32_t x21;
  uint32_t x22;
  uint32_t x23;
  uint32_t x24;
  uint32_t x25;
  uint32_t x26;
  uint32_t x27;
  uint32_t x28;
  uint32_t x29;
  uint32_t x30;
  x1 = (arg1[0]);
  x2 = (arg1[11]);
  x3 = (x2 >> 21);
  x4 = (((x1 >> 22) + (arg1[1])) + (x3 << 10));
  x5 = ((x1 & UINT32_C(0x3fffff)) + (UINT16_C(0x3d1) * x3));
  x6 = ((x4 >> 21) + (arg1[2]));
  x7 = ((x6 >> 21) + (arg1[3]));
  x8 = ((x7 >> 22) + (arg1[4]));
  x9 = ((x8 >> 21) + (arg1[5]));
  x10 = ((x9 >> 21) + (arg1[6]));
  x11 = ((x10 >> 22) + (arg1[7]));
  x12 = ((x11 >> 21) + (arg1[8]));
  x13 = ((x12 >> 21) + (arg1[9]));
  x14 = ((x13 >> 22) + (arg1[10]));
  x15 = ((x14 >> 21) + (x2 & UINT32_C(0x1fffff)));
  x16 = (fiat_secp256k1_uint1)(x15 >> 21);
  x17 = (((fiat_secp256k1_uint1)(x5 >> 22) + (x4 & UINT32_C(0x1fffff))) + ((uint32_t)x16 << 10));
  x18 = ((x5 & UINT32_C(0x3fffff)) + (UINT16_C(0x3d1) * (uint32_t)x16));
  x19 = (x18 & UINT32_C(0x3fffff));
  x20 = ((fiat_secp256k1_uint1)(x18 >> 22) + (x17 & UINT32_C(0x1fffff)));
  x21 = ((fiat_secp256k1_uint1)(x17 >> 21) + (x6 & UINT32_C(0x1fffff)));
  x22 = (x7 & UINT32_C(0x3fffff));
  x23 = (x8 & UINT32_C(0x1fffff));
  x24 = (x9 & UINT32_C(0x1fffff));
  x25 = (x10 & UINT32_C(0x3fffff));
  x26 = (x11 & UINT32_C(0x1fffff));
  x27 = (x12 & UINT32_C(0x1fffff));
  x28 = (x13 & UINT32_C(0x3fffff));
  x29 = (x14 & UINT32_C(0x1fffff));
  x30 = (x15 & UINT32_C(0x1fffff));
  out1[0] = x19;
  out1[1] = x20;
  out1[2] = x21;
  out1[3] = x22;
  out1[4] = x23;
  out1[5] = x24;
  out1[6] = x25;
  out1[7] = x26;
  out1[8] = x27;
  out1[9] = x28;
  out1[10] = x29;
  out1[11] = x30;
}

/*
 * The function fiat_secp256k1_carry_mul multiplies two field elements and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 *   arg2: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 */
static void fiat_secp256k1_carry_mul(uint32_t out1[12], const uint32_t arg1[12], const uint32_t arg2[12]) {
  uint64_t x1;
  uint64_t x2;
  uint64_t x3;
  uint64_t x4;
  uint64_t x5;
  uint64_t x6;
  uint64_t x7;
  uint64_t x8;
  uint64_t x9;
  uint64_t x10;
  uint64_t x11;
  uint64_t x12;
  uint64_t x13;
  uint64_t x14;
  uint64_t x15;
  uint64_t x16;
  uint64_t x17;
  uint64_t x18;
  uint64_t x19;
  uint64_t x20;
  uint64_t x21;
  uint64_t x22;
  uint64_t x23;
  uint64_t x24;
  uint64_t x25;
  uint64_t x26;
  uint64_t x27;
  uint64_t x28;
  uint64_t x29;
  uint64_t x30;
  uint64_t x31;
  uint64_t x32;
  uint64_t x33;
  uint64_t x34;
  uint64_t x35;
  uint64_t x36;
  uint64_t x37;
  uint64_t x38;
  uint64_t x39;
  uint64_t x40;
  uint64_t x41;
  uint64_t x42;
  uint64_t x43;
  uint64_t x44;
  uint64_t x45;
  uint64_t x46;
  uint64_t x47;
  uint64_t x48;
  uint64_t x49;
  uint64_t x50;
  uint64_t x51;
  uint64_t x52;
  uint64_t x53;
  uint64_t x54;
  uint64_t x55;
  uint64_t x56;
  uint64_t x57;
  uint64_t x58;
  uint64_t x59;
  uint64_t x60;
  uint64_t x61;
  uint64_t x62;
  uint64_t x63;
  uint64_t x64;
  uint64_t x65;
  uint64_t x66;
  uint64_t x67;
  uint64_t x68;
  uint64_t x69;
  uint64_t x70;
  uint64_t x71;
  uint64_t x72;
  uint64_t x73;
  uint64_t x74;
  uint64_t x75;
  uint64_t x76;
  uint64_t x77;
  uint64_t x78;
  uint64_t x79;
  uint64_t x80;
  uint64_t x81;
  uint64_t x82;
  uint64_t x83;
  uint64_t x84;
  uint64_t x85;
  uint64_t x86;
  uint64_t x87;
  uint64_t x88;
  uint64_t x89;
  uint64_t x90;
  uint64_t x91;
  uint64_t x92;
  uint64_t x93;
  uint64_t x94;
  uint64_t x95;
  uint64_t x96;
  uint64_t x97;
  uint64_t x98;
  uint64_t x99;
  uint64_t x100;
  uint64_t x101;
  uint64_t x102;
  uint64_t x103;
  uint64_t x104;
  uint64_t x105;
  uint64_t x106;
  uint64_t x107;
  uint64_t x108;
  uint64_t x109;
  uint64_t x110;
  uint64_t x111;
  uint64_t x112;
  uint64_t x113;
  uint64_t x114;
  uint64_t x115;
  uint64_t x116;
  uint64_t x117;
  uint64_t x118;
  uint64_t x119;
  uint64_t x120;
  uint64_t x121;
  uint64_t x122;
  uint64_t x123;
  uint64_t x124;
  uint64_t x125;
  uint64_t x126;
  uint64_t x127;
  uint64_t x128;
  uint64_t x129;
  uint64_t x130;
  uint64_t x131;
  uint64_t x132;
  uint64_t x133;
  uint64_t x134;
  uint64_t x135;
  uint64_t x136;
  uint64_t x137;
  uint64_t x138;
  uint64_t x139;
  uint64_t x140;
  uint64_t x141;
  uint64_t x142;
  uint64_t x143;
  uint64_t x144;
  uint64_t x145;
  uint64_t x146;
  uint64_t x147;
  uint64_t x148;
  uint64_t x149;
  uint64_t x150;
  uint64_t x151;
  uint64_t x152;
  uint64_t x153;
  uint64_t x154;
  uint64_t x155;
  uint64_t x156;
  uint64_t x157;
  uint64_t x158;
  uint64_t x159;
  uint64_t x160;
  uint64_t x161;
  uint64_t x162;
  uint64_t x163;
  uint64_t x164;
  uint64_t x165;
  uint64_t x166;
  uint64_t x167;
  uint64_t x168;
  uint64_t x169;
  uint64_t x170;
  uint64_t x171;
  uint64_t x172;
  uint64_t x173;
  uint64_t x174;
  uint64_t x175;
  uint64_t x176;
  uint64_t x177;
  uint64_t x178;
  uint64_t x179;
  uint64_t x180;
  uint64_t x181;
  uint64_t x182;
  uint64_t x183;
  uint64_t x184;
  uint64_t x185;
  uint64_t x186;
  uint64_t x187;
  uint64_t x188;
  uint64_t x189;
  uint64_t x190;
  uint64_t x191;
  uint64_t x192;
  uint64_t x193;
  uint64_t x194;
  uint64_t x195;
  uint64_t x196;
  uint64_t x197;
  uint64_t x198;
  uint64_t x199;
  uint64_t x200;
  uint64_t x201;
  uint64_t x202;
  uint64_t x203;
  uint64_t x204;
  uint64_t x205;
  uint64_t x206;
  uint64_t x207;
  uint64_t x208;
  uint64_t x209;
  uint64_t x210;
  uint64_t x211;
  uint64_t x212;
  uint32_t x213;
  uint64_t x214;
  uint64_t x215;
  uint64_t x216;
  uint64_t x217;
  uint64_t x218;
  uint64_t x219;
  uint64_t x220;
  uint64_t x221;
  uint64_t x222;
  uint64_t x223;
  uint64_t x224;
  uint64_t x225;
  uint64_t x226;
  uint32_t x227;
  uint64_t x228;
  uint64_t x229;
  uint64_t x230;
  uint64_t x231;
  uint32_t x232;
  uint64_t x233;
  uint64_t x234;
  uint32_t x235;
  uint32_t x236;
  uint32_t x237;
  uint64_t x238;
  uint32_t x239;
  uint64_t x240;
  uint64_t x241;
  uint32_t x242;
  uint64_t x243;
  uint64_t x244;
  uint32_t x245;
  uint64_t x246;
  uint64_t x247;
  uint32_t x248;
  uint64_t x249;
  uint64_t x250;
  uint32_t x251;
  uint64_t x252;
  uint64_t x253;
  uint32_t x254;
  uint64_t x255;
  uint64_t x256;
  uint32_t x257;
  uint64_t x258;
  uint64_t x259;
  uint32_t x260;
  uint64_t x261;
  uint64_t x262;
  uint32_t x263;
  uint64_t x264;
  uint32_t x265;
  uint32_t x266;
  uint32_t x267;
  uint32_t x268;
  uint32_t x269;
  uint32_t x270;
  uint32_t x271;
  uint32_t x272;
  uint32_t x273;
  uint32_t x274;
  uint32_t x275;
  uint32_t x276;
  x1 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[11]) * (arg2[11])));
  x2 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[11]) * (arg2[10])) * 0x2));
  x3 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[11]) * (arg2[9])));
  x4 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[11]) * (arg2[8])));
  x5 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[11]) * (arg2[7])) * 0x2));
  x6 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[11]) * (arg2[6])));
  x7 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[11]) * (arg2[5])));
  x8 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[11]) * (arg2[4])) * 0x2));
  x9 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[11]) * (arg2[3])));
  x10 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[11]) * (arg2[2])));
  x11 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[11]) * (arg2[1])) * 0x2));
  x12 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[10]) * (arg2[11])) * 0x2));
  x13 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[10]) * (arg2[10])) * 0x2));
  x14 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[10]) * (arg2[9])));
  x15 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[10]) * (arg2[8])) * 0x2));
  x16 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[10]) * (arg2[7])) * 0x2));
  x17 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[10]) * (arg2[6])));
  x18 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[10]) * (arg2[5])) * 0x2));
  x19 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[10]) * (arg2[4])) * 0x2));
  x20 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[10]) * (arg2[3])));
  x21 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[10]) * (arg2[2])) * 0x2));
  x22 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[9]) * (arg2[11])));
  x23 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[9]) * (arg2[10])));
  x24 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[9]) * (arg2[9])));
  x25 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[9]) * (arg2[8])));
  x26 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[9]) * (arg2[7])));
  x27 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[9]) * (arg2[6])));
  x28 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[9]) * (arg2[5])));
  x29 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[9]) * (arg2[4])));
  x30 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[9]) * (arg2[3])));
  x31 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[8]) * (arg2[11])));
  x32 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[8]) * (arg2[10])) * 0x2));
  x33 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[8]) * (arg2[9])));
  x34 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[8]) * (arg2[8])));
  x35 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[8]) * (arg2[7])) * 0x2));
  x36 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[8]) * (arg2[6])));
  x37 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[8]) * (arg2[5])));
  x38 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[8]) * (arg2[4])) * 0x2));
  x39 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[7]) * (arg2[11])) * 0x2));
  x40 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[7]) * (arg2[10])) * 0x2));
  x41 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[7]) * (arg2[9])));
  x42 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[7]) * (arg2[8])) * 0x2));
  x43 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[7]) * (arg2[7])) * 0x2));
  x44 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[7]) * (arg2[6])));
  x45 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[7]) * (arg2[5])) * 0x2));
  x46 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[6]) * (arg2[11])));
  x47 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[6]) * (arg2[10])));
  x48 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[6]) * (arg2[9])));
  x49 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[6]) * (arg2[8])));
  x50 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[6]) * (arg2[7])));
  x51 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[6]) * (arg2[6])));
  x52 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[5]) * (arg2[11])));
  x53 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[5]) * (arg2[10])) * 0x2));
  x54 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[5]) * (arg2[9])));
  x55 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[5]) * (arg2[8])));
  x56 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[5]) * (arg2[7])) * 0x2));
  x57 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[4]) * (arg2[11])) * 0x2));
  x58 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[4]) * (arg2[10])) * 0x2));
  x59 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[4]) * (arg2[9])));
  x60 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[4]) * (arg2[8])) * 0x2));
  x61 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[3]) * (arg2[11])));
  x62 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[3]) * (arg2[10])));
  x63 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[3]) * (arg2[9])));
  x64 = (UINT16_C(0x3d1) * ((uint64_t)(arg1[2]) * (arg2[11])));
  x65 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[2]) * (arg2[10])) * 0x2));
  x66 = (UINT16_C(0x3d1) * (((uint64_t)(arg1[1]) * (arg2[11])) * 0x2));
  x67 = (((uint64_t)(arg1[11]) * (arg2[11])) << 11);
  x68 = (((uint64_t)(arg1[11]) * (arg2[10])) << 11);
  x69 = (((uint64_t)(arg1[11]) * (arg2[9])) << 11);
  x70 = (((uint64_t)(arg1[11]) * (arg2[8])) << 11);
  x71 = (((uint64_t)(arg1[11]) * (arg2[7])) << 11);
  x72 = (((uint64_t)(arg1[11]) * (arg2[6])) << 11);
  x73 = (((uint64_t)(arg1[11]) * (arg2[5])) << 11);
  x74 = (((uint64_t)(arg1[11]) * (arg2[4])) << 11);
  x75 = (((uint64_t)(arg1[11]) * (arg2[3])) << 11);
  x76 = (((uint64_t)(arg1[11]) * (arg2[2])) << 11);
  x77 = (((uint64_t)(arg1[11]) * (arg2[1])) << 11);
  x78 = (((uint64_t)(arg1[10]) * (arg2[11])) << 11);
  x79 = (((uint64_t)(arg1[10]) * (arg2[10])) << 12);
  x80 = (((uint64_t)(arg1[10]) * (arg2[9])) << 11);
  x81 = (((uint64_t)(arg1[10]) * (arg2[8])) << 11);
  x82 = (((uint64_t)(arg1[10]) * (arg2[7])) << 12);
  x83 = (((uint64_t)(arg1[10]) * (arg2[6])) << 11);
  x84 = (((uint64_t)(arg1[10]) * (arg2[5])) << 11);
  x85 = (((uint64_t)(arg1[10]) * (arg2[4])) << 12);
  x86 = (((uint64_t)(arg1[10]) * (arg2[3])) << 11);
  x87 = (((uint64_t)(arg1[10]) * (arg2[2])) << 11);
  x88 = (((uint64_t)(arg1[9]) * (arg2[11])) << 11);
  x89 = (((uint64_t)(arg1[9]) * (arg2[10])) << 11);
  x90 = (((uint64_t)(arg1[9]) * (arg2[9])) << 10);
  x91 = (((uint64_t)(arg1[9]) * (arg2[8])) << 11);
  x92 = (((uint64_t)(arg1[9]) * (arg2[7])) << 11);
  x93 = (((uint64_t)(arg1[9]) * (arg2[6])) << 10);
  x94 = (((uint64_t)(arg1[9]) * (arg2[5])) << 11);
  x95 = (((uint64_t)(arg1[9]) * (arg2[4])) << 11);
  x96 = (((uint64_t)(arg1[9]) * (arg2[3])) << 10);
  x97 = (((uint64_t)(arg1[8]) * (arg2[11])) << 11);
  x98 = (((uint64_t)(arg1[8]) * (arg2[10])) << 11);
  x99 = (((uint64_t)(arg1[8]) * (arg2[9])) << 11);
  x100 = (((uint64_t)(arg1[8]) * (arg2[8])) << 11);
  x101 = (((uint64_t)(arg1[8]) * (arg2[7])) << 11);
  x102 = (((uint64_t)(arg1[8]) * (arg2[6])) << 11);
  x103 = (((uint64_t)(arg1[8]) * (arg2[5])) << 11);
  x104 = (((uint64_t)(arg1[8]) * (arg2[4])) << 11);
  x105 = (((uint64_t)(arg1[7]) * (arg2[11])) << 11);
  x106 = (((uint64_t)(arg1[7]) * (arg2[10])) << 12);
  x107 = (((uint64_t)(arg1[7]) * (arg2[9])) << 11);
  x108 = (((uint64_t)(arg1[7]) * (arg2[8])) << 11);
  x109 = (((uint64_t)(arg1[7]) * (arg2[7])) << 12);
  x110 = (((uint64_t)(arg1[7]) * (arg2[6])) << 11);
  x111 = (((uint64_t)(arg1[7]) * (arg2[5])) << 11);
  x112 = (((uint64_t)(arg1[6]) * (arg2[11])) << 11);
  x113 = (((uint64_t)(arg1[6]) * (arg2[10])) << 11);
  x114 = (((uint64_t)(arg1[6]) * (arg2[9])) << 10);
  x115 = (((uint64_t)(arg1[6]) * (arg2[8])) << 11);
  x116 = (((uint64_t)(arg1[6]) * (arg2[7])) << 11);
  x117 = (((uint64_t)(arg1[6]) * (arg2[6])) << 10);
  x118 = (((uint64_t)(arg1[5]) * (arg2[11])) << 11);
  x119 = (((uint64_t)(arg1[5]) * (arg2[10])) << 11);
  x120 = (((uint64_t)(arg1[5]) * (arg2[9])) << 11);
  x121 = (((uint64_t)(arg1[5]) * (arg2[8])) << 11);
  x122 = (((uint64_t)(arg1[5]) * (arg2[7])) << 11);
  x123 = (((uint64_t)(arg1[4]) * (arg2[11])) << 11);
  x124 = (((uint64_t)(arg1[4]) * (arg2[10])) << 12);
  x125 = (((uint64_t)(arg1[4]) * (arg2[9])) << 11);
  x126 = (((uint64_t)(arg1[4]) * (arg2[8])) << 11);
  x127 = (((uint64_t)(arg1[3]) * (arg2[11])) << 11);
  x128 = (((uint64_t)(arg1[3]) * (arg2[10])) << 11);
  x129 = (((uint64_t)(arg1[3]) * (arg2[9])) << 10);
  x130 = (((uint64_t)(arg1[2]) * (arg2[11])) << 11);
  x131 = (((uint64_t)(arg1[2]) * (arg2[10])) << 11);
  x132 = (((uint64_t)(arg1[1]) * (arg2[11])) << 11);
  x133 = ((uint64_t)(arg1[11]) * (arg2[0]));
  x134 = ((uint64_t)(arg1[10]) * ((arg2[1]) * 0x2));
  x135 = ((uint64_t)(arg1[10]) * (arg2[0]));
  x136 = ((uint64_t)(arg1[9]) * (arg2[2]));
  x137 = ((uint64_t)(arg1[9]) * (arg2[1]));
  x138 = ((uint64_t)(arg1[9]) * (arg2[0]));
  x139 = ((uint64_t)(arg1[8]) * (arg2[3]));
  x140 = ((uint64_t)(arg1[8]) * (arg2[2]));
  x141 = ((uint64_t)(arg1[8]) * ((arg2[1]) * 0x2));
  x142 = ((uint64_t)(arg1[8]) * (arg2[0]));
  x143 = ((uint64_t)(arg1[7]) * ((arg2[4]) * 0x2));
  x144 = ((uint64_t)(arg1[7]) * (arg2[3]));
  x145 = ((uint64_t)(arg1[7]) * ((arg2[2]) * 0x2));
  x146 = ((uint64_t)(arg1[7]) * ((arg2[1]) * 0x2));
  x147 = ((uint64_t)(arg1[7]) * (arg2[0]));
  x148 = ((uint64_t)(arg1[6]) * (arg2[5]));
  x149 = ((uint64_t)(arg1[6]) * (arg2[4]));
  x150 = ((uint64_t)(arg1[6]) * (arg2[3]));
  x151 = ((uint64_t)(arg1[6]) * (arg2[2]));
  x152 = ((uint64_t)(arg1[6]) * (arg2[1]));
  x153 = ((uint64_t)(arg1[6]) * (arg2[0]));
  x154 = ((uint64_t)(arg1[5]) * (arg2[6]));
  x155 = ((uint64_t)(arg1[5]) * (arg2[5]));
  x156 = ((uint64_t)(arg1[5]) * ((arg2[4]) * 0x2));
  x157 = ((uint64_t)(arg1[5]) * (arg2[3]));
  x158 = ((uint64_t)(arg1[5]) * (arg2[2]));
  x159 = ((uint64_t)(arg1[5]) * ((arg2[1]) * 0x2));
  x160 = ((uint64_t)(arg1[5]) * (arg2[0]));
  x161 = ((uint64_t)(arg1[4]) * ((arg2[7]) * 0x2));
  x162 = ((uint64_t)(arg1[4]) * (arg2[6]));
  x163 = ((uint64_t)(arg1[4]) * ((arg2[5]) * 0x2));
  x164 = ((uint64_t)(arg1[4]) * ((arg2[4]) * 0x2));
  x165 = ((uint64_t)(arg1[4]) * (arg2[3]));
  x166 = ((uint64_t)(arg1[4]) * ((arg2[2]) * 0x2));
  x167 = ((uint64_t)(arg1[4]) * ((arg2[1]) * 0x2));
  x168 = ((uint64_t)(arg1[4]) * (arg2[0]));
  x169 = ((uint64_t)(arg1[3]) * (arg2[8]));
  x170 = ((uint64_t)(arg1[3]) * (arg2[7]));
  x171 = ((uint64_t)(arg1[3]) * (arg2[6]));
  x172 = ((uint64_t)(arg1[3]) * (arg2[5]));
  x173 = ((uint64_t)(arg1[3]) * (arg2[4]));
  x174 = ((uint64_t)(arg1[3]) * (arg2[3]));
  x175 = ((uint64_t)(arg1[3]) * (arg2[2]));
  x176 = ((uint64_t)(arg1[3]) * (arg2[1]));
  x177 = ((uint64_t)(arg1[3]) * (arg2[0]));
  x178 = ((uint64_t)(arg1[2]) * (arg2[9]));
  x179 = ((uint64_t)(arg1[2]) * (arg2[8]));
  x180 = ((uint64_t)(arg1[2]) * ((arg2[7]) * 0x2));
  x181 = ((uint64_t)(arg1[2]) * (arg2[6]));
  x182 = ((uint64_t)(arg1[2]) * (arg2[5]));
  x183 = ((uint64_t)(arg1[2]) * ((arg2[4]) * 0x2));
  x184 = ((uint64_t)(arg1[2]) * (arg2[3]));
  x185 = ((uint64_t)(arg1[2]) * (arg2[2]));
  x186 = ((uint64_t)(arg1[2]) * ((arg2[1]) * 0x2));
  x187 = ((uint64_t)(arg1[2]) * (arg2[0]));
  x188 = ((uint64_t)(arg1[1]) * ((arg2[10]) * 0x2));
  x189 = ((uint64_t)(arg1[1]) * (arg2[9]));
  x190 = ((uint64_t)(arg1[1]) * ((arg2[8]) * 0x2));
  x191 = ((uint64_t)(arg1[1]) * ((arg2[7]) * 0x2));
  x192 = ((uint64_t)(arg1[1]) * (arg2[6]));
  x193 = ((uint64_t)(arg1[1]) * ((arg2[5]) * 0x2));
  x194 = ((uint64_t)(arg1[1]) * ((arg2[4]) * 0x2));
  x195 = ((uint64_t)(arg1[1]) * (arg2[3]));
  x196 = ((uint64_t)(arg1[1]) * ((arg2[2]) * 0x2));
  x197 = ((uint64_t)(arg1[1]) * ((arg2[1]) * 0x2));
  x198 = ((uint64_t)(arg1[1]) * (arg2[0]));
  x199 = ((uint64_t)(arg1[0]) * (arg2[11]));
  x200 = ((uint64_t)(arg1[0]) * (arg2[10]));
  x201 = ((uint64_t)(arg1[0]) * (arg2[9]));
  x202 = ((uint64_t)(arg1[0]) * (arg2[8]));
  x203 = ((uint64_t)(arg1[0]) * (arg2[7]));
  x204 = ((uint64_t)(arg1[0]) * (arg2[6]));
  x205 = ((uint64_t)(arg1[0]) * (arg2[5]));
  x206 = ((uint64_t)(arg1[0]) * (arg2[4]));
  x207 = ((uint64_t)(arg1[0]) * (arg2[3]));
  x208 = ((uint64_t)(arg1[0]) * (arg2[2]));
  x209 = ((uint64_t)(arg1[0]) * (arg2[1]));
  x210 = ((uint64_t)(arg1[0]) * (arg2[0]));
  x211 = (x210 + (x66 + (x65 + (x63 + (x60 + (x56 + (x51 + (x45 + (x38 + (x30 + (x21 + x11)))))))))));
  x212 = (x211 >> 22);
  x213 = (uint32_t)(x211 & UINT32_C(0x3fffff));
  x214 = (x199 + (x188 + (x178 + (x169 + (x161 + (x154 + (x148 + (x143 + (x139 + (x136 + (x134 + (x133 + x67))))))))))));
  x215 = (x200 + (x189 + (x179 + (x170 + (x162 + (x155 + (x149 + (x144 + (x140 + (x137 + (x135 + (x78 + (x68 + x1)))))))))))));
  x216 = (x201 + (x190 + (x180 + (x171 + (x163 + (x156 + (x150 + (x145 + (x141 + (x138 + (x88 + (x79 + (x69 + (x12 + x2))))))))))))));
  x217 = (x202 + (x191 + (x181 + (x172 + (x164 + (x157 + (x151 + (x146 + (x142 + (x97 + (x89 + (x80 + (x70 + (x22 + (x13 + x3)))))))))))))));
  x218 = (x203 + (x192 + (x182 + (x173 + (x165 + (x158 + (x152 + (x147 + (x105 + (x98 + (x90 + (x81 + (x71 + (x31 + (x23 + (x14 + x4))))))))))))))));
  x219 = (x204 + (x193 + (x183 + (x174 + (x166 + (x159 + (x153 + (x112 + (x106 + (x99 + (x91 + (x82 + (x72 + (x39 + (x32 + (x24 + (x15 + x5)))))))))))))))));
  x220 = (x205 + (x194 + (x184 + (x175 + (x167 + (x160 + (x118 + (x113 + (x107 + (x100 + (x92 + (x83 + (x73 + (x46 + (x40 + (x33 + (x25 + (x16 + x6))))))))))))))))));
  x221 = (x206 + (x195 + (x185 + (x176 + (x168 + (x123 + (x119 + (x114 + (x108 + (x101 + (x93 + (x84 + (x74 + (x52 + (x47 + (x41 + (x34 + (x26 + (x17 + x7)))))))))))))))))));
  x222 = (x207 + (x196 + (x186 + (x177 + (x127 + (x124 + (x120 + (x115 + (x109 + (x102 + (x94 + (x85 + (x75 + (x57 + (x53 + (x48 + (x42 + (x35 + (x27 + (x18 + x8))))))))))))))))))));
  x223 = (x208 + (x197 + (x187 + (x130 + (x128 + (x125 + (x121 + (x116 + (x110 + (x103 + (x95 + (x86 + (x76 + (x61 + (x58 + (x54 + (x49 + (x43 + (x36 + (x28 + (x19 + x9)))))))))))))))))))));
  x224 = (x209 + (x198 + (x132 + (x131 + (x129 + (x126 + (x122 + (x117 + (x111 + (x104 + (x96 + (x87 + (x77 + (x64 + (x62 + (x59 + (x55 + (x50 + (x44 + (x37 + (x29 + (x20 + x10))))))))))))))))))))));
  x225 = (x212 + x224);
  x226 = (x214 >> 21);
  x227 = (uint32_t)(x214 & UINT32_C(0x1fffff));
  x228 = (UINT16_C(0x3d1) * x226);
  x229 = (x226 << 10);
  x230 = (x225 + x229);
  x231 = (x230 >> 21);
  x232 = (uint32_t)(x230 & UINT32_C(0x1fffff));
  x233 = (x213 + x228);
  x234 = (x231 + x223);
  x235 = (uint32_t)(x233 >> 22);
  x236 = (uint32_t)(x233 & UINT32_C(0x3fffff));
  x237 = (x235 + x232);
  x238 = (x234 >> 21);
  x239 = (uint32_t)(x234 & UINT32_C(0x1fffff));
  x240 = (x238 + x222);
  x241 = (x240 >> 22);
  x242 = (uint32_t)(x240 & UINT32_C(0x3fffff));
  x243 = (x241 + x221);
  x244 = (x243 >> 21);
  x245 = (uint32_t)(x243 & UINT32_C(0x1fffff));
  x246 = (x244 + x220);
  x247 = (x246 >> 21);
  x248 = (uint32_t)(x246 & UINT32_C(0x1fffff));
  x249 = (x247 + x219);
  x250 = (x249 >> 22);
  x251 = (uint32_t)(x249 & UINT32_C(0x3fffff));
  x252 = (x250 + x218);
  x253 = (x252 >> 21);
  x254 = (uint32_t)(x252 & UINT32_C(0x1fffff));
  x255 = (x253 + x217);
  x256 = (x255 >> 21);
  x257 = (uint32_t)(x255 & UINT32_C(0x1fffff));
  x258 = (x256 + x216);
  x259 = (x258 >> 22);
  x260 = (uint32_t)(x258 & UINT32_C(0x3fffff));
  x261 = (x259 + x215);
  x262 = (x261 >> 21);
  x263 = (uint32_t)(x261 & UINT32_C(0x1fffff));
  x264 = (x262 + x227);
  x265 = (uint32_t)(x264 >> 21);
  x266 = (uint32_t)(x264 & UINT32_C(0x1fffff));
  x267 = (UINT16_C(0x3d1) * x265);
  x268 = (x265 << 10);
  x269 = (x237 + x268);
  x270 = (x269 >> 21);
  x271 = (x269 & UINT32_C(0x1fffff));
  x272 = (x236 + x267);
  x273 = (x270 + x239);
  x274 = (x272 >> 22);
  x275 = (x272 & UINT32_C(0x3fffff));
  x276 = (x274 + x271);
  out1[0] = x275;
  out1[1] = x276;
  out1[2] = x273;
  out1[3] = x242;
  out1[4] = x245;
  out1[5] = x248;
  out1[6] = x251;
  out1[7] = x254;
  out1[8] = x257;
  out1[9] = x260;
  out1[10] = x263;
  out1[11] = x266;
}

/*
 * The function fiat_secp256k1_carry_square squares a field element and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * eval arg1) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 */
static void fiat_secp256k1_carry_square(uint32_t out1[12], const uint32_t arg1[12]) {
  uint32_t x1;
  uint64_t x2;
  uint32_t x3;
  uint64_t x4;
  uint32_t x5;
  uint32_t x6;
  uint64_t x7;
  uint32_t x8;
  uint64_t x9;
  uint32_t x10;
  uint32_t x11;
  uint64_t x12;
  uint32_t x13;
  uint64_t x14;
  uint32_t x15;
  uint32_t x16;
  uint64_t x17;
  uint32_t x18;
  uint64_t x19;
  uint32_t x20;
  uint32_t x21;
  uint64_t x22;
  uint32_t x23;
  uint64_t x24;
  uint32_t x25;
  uint32_t x26;
  uint64_t x27;
  uint32_t x28;
  uint32_t x29;
  uint32_t x30;
  uint32_t x31;
  uint32_t x32;
  uint32_t x33;
  uint64_t x34;
  uint64_t x35;
  uint64_t x36;
  uint64_t x37;
  uint64_t x38;
  uint64_t x39;
  uint64_t x40;
  uint64_t x41;
  uint64_t x42;
  uint64_t x43;
  uint64_t x44;
  uint64_t x45;
  uint64_t x46;
  uint64_t x47;
  uint64_t x48;
  uint64_t x49;
  uint64_t x50;
  uint64_t x51;
  uint64_t x52;
  uint64_t x53;
  uint64_t x54;
  uint64_t x55;
  uint64_t x56;
  uint64_t x57;
  uint64_t x58;
  uint64_t x59;
  uint64_t x60;
  uint64_t x61;
  uint64_t x62;
  uint64_t x63;
  uint64_t x64;
  uint64_t x65;
  uint64_t x66;
  uint64_t x67;
  uint64_t x68;
  uint64_t x69;
  uint64_t x70;
  uint64_t x71;
  uint64_t x72;
  uint64_t x73;
  uint64_t x74;
  uint64_t x75;
  uint64_t x76;
  uint64_t x77;
  uint64_t x78;
  uint64_t x79;
  uint64_t x80;
  uint64_t x81;
  uint64_t x82;
  uint64_t x83;
  uint64_t x84;
  uint64_t x85;
  uint64_t x86;
  uint64_t x87;
  uint64_t x88;
  uint64_t x89;
  uint64_t x90;
  uint64_t x91;
  uint64_t x92;
  uint64_t x93;
  uint64_t x94;
  uint64_t x95;
  uint64_t x96;
  uint64_t x97;
  uint64_t x98;
  uint64_t x99;
  uint64_t x100;
  uint64_t x101;
  uint64_t x102;
  uint64_t x103;
  uint64_t x104;
  uint64_t x105;
  uint64_t x106;
  uint64_t x107;
  uint64_t x108;
  uint64_t x109;
  uint64_t x110;
  uint64_t x111;
  uint64_t x112;
  uint64_t x113;
  uint64_t x114;
  uint64_t x115;
  uint64_t x116;
  uint64_t x117;
  uint64_t x118;
  uint64_t x119;
  uint64_t x120;
  uint64_t x121;
  uint64_t x122;
  uint64_t x123;
  uint64_t x124;
  uint64_t x125;
  uint64_t x126;
  uint64_t x127;
  uint64_t x128;
  uint64_t x129;
  uint64_t x130;
  uint64_t x131;
  uint64_t x132;
  uint64_t x133;
  uint64_t x134;
  uint64_t x135;
  uint64_t x136;
  uint64_t x137;
  uint64_t x138;
  uint64_t x139;
  uint64_t x140;
  uint64_t x141;
  uint64_t x142;
  uint64_t x143;
  uint64_t x144;
  uint64_t x145;
  uint64_t x146;
  uint64_t x147;
  uint64_t x148;
  uint64_t x149;
  uint32_t x150;
  uint64_t x151;
  uint64_t x152;
  uint64_t x153;
  uint64_t x154;
  uint64_t x155;
  uint64_t x156;
  uint64_t x157;
  uint64_t x158;
  uint64_t x159;
  uint64_t x160;
  uint64_t x161;
  uint64_t x162;
  uint64_t x163;
  uint32_t x164;
  uint64_t x165;
  uint64_t x166;
  uint64_t x167;
  uint64_t x168;
  uint32_t x169;
  uint64_t x170;
  uint64_t x171;
  uint32_t x172;
  uint32_t x173;
  uint32_t x174;
  uint64_t x175;
  uint32_t x176;
  uint64_t x177;
  uint64_t x178;
  uint32_t x179;
  uint64_t x180;
  uint64_t x181;
  uint32_t x182;
  uint64_t x183;
  uint64_t x184;
  uint32_t x185;
  uint64_t x186;
  uint64_t x187;
  uint32_t x188;
  uint64_t x189;
  uint64_t x190;
  uint32_t x191;
  uint64_t x192;
  uint64_t x193;
  uint32_t x194;
  uint64_t x195;
  uint64_t x196;
  uint32_t x197;
  uint64_t x198;
  uint64_t x199;
  uint32_t x200;
  uint64_t x201;
  uint32_t x202;
  uint32_t x203;
  uint32_t x204;
  uint32_t x205;
  uint32_t x206;
  uint32_t x207;
  uint32_t x208;
  uint32_t x209;
  uint32_t x210;
  uint32_t x211;
  uint32_t x212;
  uint32_t x213;
  x1 = (arg1[11]);
  x2 = ((uint64_t)(arg1[11]) * UINT16_C(0x3d1));
  x3 = (x1 * 0x2);
  x4 = (x2 * 0x2);
  x5 = ((arg1[11]) * 0x2);
  x6 = (arg1[10]);
  x7 = ((uint64_t)(arg1[10]) * UINT16_C(0x3d1));
  x8 = (x6 * 0x2);
  x9 = (x7 * 0x2);
  x10 = ((arg1[10]) * 0x2);
  x11 = (arg1[9]);
  x12 = ((uint64_t)(arg1[9]) * UINT16_C(0x3d1));
  x13 = (x11 * 0x2);
  x14 = (x12 * 0x2);
  x15 = ((arg1[9]) * 0x2);
  x16 = (arg1[8]);
  x17 = ((uint64_t)(arg1[8]) * UINT16_C(0x3d1));
  x18 = (x16 * 0x2);
  x19 = (x17 * 0x2);
  x20 = ((arg1[8]) * 0x2);
  x21 = (arg1[7]);
  x22 = ((uint64_t)(arg1[7]) * UINT16_C(0x3d1));
  x23 = (x21 * 0x2);
  x24 = (x22 * 0x2);
  x25 = ((arg1[7]) * 0x2);
  x26 = (arg1[6]);
  x27 = ((uint64_t)(arg1[6]) * UINT16_C(0x3d1));
  x28 = ((arg1[6]) * 0x2);
  x29 = ((arg1[5]) * 0x2);
  x30 = ((arg1[4]) * 0x2);
  x31 = ((arg1[3]) * 0x2);
  x32 = ((arg1[2]) * 0x2);
  x33 = ((arg1[1]) * 0x2);
  x34 = ((arg1[11]) * x2);
  x35 = (((uint64_t)(arg1[11]) * x1) << 11);
  x36 = ((arg1[10]) * (x4 * 0x2));
  x37 = (((uint64_t)(arg1[10]) * x3) << 11);
  x38 = ((arg1[10]) * (x7 * 0x2));
  x39 = (((uint64_t)(arg1[10]) * x6) << 12);
  x40 = ((arg1[9]) * x4);
  x41 = (((uint64_t)(arg1[9]) * x3) << 11);
  x42 = ((arg1[9]) * x9);
  x43 = (((uint64_t)(arg1[9]) * x8) << 11);
  x44 = ((arg1[9]) * x12);
  x45 = (((uint64_t)(arg1[9]) * x11) << 10);
  x46 = ((arg1[8]) * x4);
  x47 = (((uint64_t)(arg1[8]) * x3) << 11);
  x48 = ((arg1[8]) * (x9 * 0x2));
  x49 = (((uint64_t)(arg1[8]) * x8) << 11);
  x50 = ((arg1[8]) * x14);
  x51 = (((uint64_t)(arg1[8]) * x13) << 11);
  x52 = ((arg1[8]) * x17);
  x53 = (((uint64_t)(arg1[8]) * x16) << 11);
  x54 = ((arg1[7]) * (x4 * 0x2));
  x55 = (((uint64_t)(arg1[7]) * x3) << 11);
  x56 = ((arg1[7]) * (x9 * 0x2));
  x57 = (((uint64_t)(arg1[7]) * x8) << 12);
  x58 = ((arg1[7]) * x14);
  x59 = (((uint64_t)(arg1[7]) * x13) << 11);
  x60 = ((arg1[7]) * (x19 * 0x2));
  x61 = (((uint64_t)(arg1[7]) * x18) << 11);
  x62 = ((arg1[7]) * (x22 * 0x2));
  x63 = (((uint64_t)(arg1[7]) * x21) << 12);
  x64 = ((arg1[6]) * x4);
  x65 = (((uint64_t)(arg1[6]) * x3) << 11);
  x66 = ((arg1[6]) * x9);
  x67 = (((uint64_t)(arg1[6]) * x8) << 11);
  x68 = ((arg1[6]) * x14);
  x69 = (((uint64_t)(arg1[6]) * x13) << 10);
  x70 = ((arg1[6]) * x19);
  x71 = (((uint64_t)(arg1[6]) * x18) << 11);
  x72 = ((arg1[6]) * x24);
  x73 = (((uint64_t)(arg1[6]) * x23) << 11);
  x74 = ((arg1[6]) * x27);
  x75 = (((uint64_t)(arg1[6]) * x26) << 10);
  x76 = ((arg1[5]) * x4);
  x77 = (((uint64_t)(arg1[5]) * x3) << 11);
  x78 = ((arg1[5]) * (x9 * 0x2));
  x79 = (((uint64_t)(arg1[5]) * x8) << 11);
  x80 = ((arg1[5]) * x14);
  x81 = (((uint64_t)(arg1[5]) * x13) << 11);
  x82 = ((arg1[5]) * x19);
  x83 = (((uint64_t)(arg1[5]) * x18) << 11);
  x84 = ((arg1[5]) * (x24 * 0x2));
  x85 = (((uint64_t)(arg1[5]) * x23) << 11);
  x86 = ((uint64_t)(arg1[5]) * x28);
  x87 = ((uint64_t)(arg1[5]) * (arg1[5]));
  x88 = ((arg1[4]) * (x4 * 0x2));
  x89 = (((uint64_t)(arg1[4]) * x3) << 11);
  x90 = ((arg1[4]) * (x9 * 0x2));
  x91 = (((uint64_t)(arg1[4]) * x8) << 12);
  x92 = ((arg1[4]) * x14);
  x93 = (((uint64_t)(arg1[4]) * x13) << 11);
  x94 = ((arg1[4]) * (x19 * 0x2));
  x95 = (((uint64_t)(arg1[4]) * x18) << 11);
  x96 = ((uint64_t)(arg1[4]) * (x25 * 0x2));
  x97 = ((uint64_t)(arg1[4]) * x28);
  x98 = ((uint64_t)(arg1[4]) * (x29 * 0x2));
  x99 = ((uint64_t)(arg1[4]) * ((arg1[4]) * 0x2));
  x100 = ((arg1[3]) * x4);
  x101 = (((uint64_t)(arg1[3]) * x3) << 11);
  x102 = ((arg1[3]) * x9);
  x103 = (((uint64_t)(arg1[3]) * x8) << 11);
  x104 = ((arg1[3]) * x14);
  x105 = (((uint64_t)(arg1[3]) * x13) << 10);
  x106 = ((uint64_t)(arg1[3]) * x20);
  x107 = ((uint64_t)(arg1[3]) * x25);
  x108 = ((uint64_t)(arg1[3]) * x28);
  x109 = ((uint64_t)(arg1[3]) * x29);
  x110 = ((uint64_t)(arg1[3]) * x30);
  x111 = ((uint64_t)(arg1[3]) * (arg1[3]));
  x112 = ((arg1[2]) * x4);
  x113 = (((uint64_t)(arg1[2]) * x3) << 11);
  x114 = ((arg1[2]) * (x9 * 0x2));
  x115 = (((uint64_t)(arg1[2]) * x8) << 11);
  x116 = ((uint64_t)(arg1[2]) * x15);
  x117 = ((uint64_t)(arg1[2]) * x20);
  x118 = ((uint64_t)(arg1[2]) * (x25 * 0x2));
  x119 = ((uint64_t)(arg1[2]) * x28);
  x120 = ((uint64_t)(arg1[2]) * x29);
  x121 = ((uint64_t)(arg1[2]) * (x30 * 0x2));
  x122 = ((uint64_t)(arg1[2]) * x31);
  x123 = ((uint64_t)(arg1[2]) * (arg1[2]));
  x124 = ((arg1[1]) * (x4 * 0x2));
  x125 = (((uint64_t)(arg1[1]) * x3) << 11);
  x126 = ((uint64_t)(arg1[1]) * (x10 * 0x2));
  x127 = ((uint64_t)(arg1[1]) * x15);
  x128 = ((uint64_t)(arg1[1]) * (x20 * 0x2));
  x129 = ((uint64_t)(arg1[1]) * (x25 * 0x2));
  x130 = ((uint64_t)(arg1[1]) * x28);
  x131 = ((uint64_t)(arg1[1]) * (x29 * 0x2));
  x132 = ((uint64_t)(arg1[1]) * (x30 * 0x2));
  x133 = ((uint64_t)(arg1[1]) * x31);
  x134 = ((uint64_t)(arg1[1]) * (x32 * 0x2));
  x135 = ((uint64_t)(arg1[1]) * ((arg1[1]) * 0x2));
  x136 = ((uint64_t)(arg1[0]) * x5);
  x137 = ((uint64_t)(arg1[0]) * x10);
  x138 = ((uint64_t)(arg1[0]) * x15);
  x139 = ((uint64_t)(arg1[0]) * x20);
  x140 = ((uint64_t)(arg1[0]) * x25);
  x141 = ((uint64_t)(arg1[0]) * x28);
  x142 = ((uint64_t)(arg1[0]) * x29);
  x143 = ((uint64_t)(arg1[0]) * x30);
  x144 = ((uint64_t)(arg1[0]) * x31);
  x145 = ((uint64_t)(arg1[0]) * x32);
  x146 = ((uint64_t)(arg1[0]) * x33);
  x147 = ((uint64_t)(arg1[0]) * (arg1[0]));
  x148 = (x147 + (x124 + (x114 + (x104 + (x94 + (x84 + x74))))));
  x149 = (x148 >> 22);
  x150 = (uint32_t)(x148 & UINT32_C(0x3fffff));
  x151 = (x136 + (x126 + (x116 + (x106 + (x96 + (x86 + x35))))));
  x152 = (x137 + (x127 + (x117 + (x107 + (x97 + (x87 + (x37 + x34)))))));
  x153 = (x138 + (x128 + (x118 + (x108 + (x98 + (x41 + (x39 + x36)))))));
  x154 = (x139 + (x129 + (x119 + (x109 + (x99 + (x47 + (x43 + (x40 + x38))))))));
  x155 = (x140 + (x130 + (x120 + (x110 + (x55 + (x49 + (x46 + (x45 + x42))))))));
  x156 = (x141 + (x131 + (x121 + (x111 + (x65 + (x57 + (x54 + (x51 + (x48 + x44)))))))));
  x157 = (x142 + (x132 + (x122 + (x77 + (x67 + (x64 + (x59 + (x56 + (x53 + x50)))))))));
  x158 = (x143 + (x133 + (x123 + (x89 + (x79 + (x76 + (x69 + (x66 + (x61 + (x58 + x52))))))))));
  x159 = (x144 + (x134 + (x101 + (x91 + (x88 + (x81 + (x78 + (x71 + (x68 + (x63 + x60))))))))));
  x160 = (x145 + (x135 + (x113 + (x103 + (x100 + (x93 + (x90 + (x83 + (x80 + (x73 + (x70 + x62)))))))))));
  x161 = (x146 + (x125 + (x115 + (x112 + (x105 + (x102 + (x95 + (x92 + (x85 + (x82 + (x75 + x72)))))))))));
  x162 = (x149 + x161);
  x163 = (x151 >> 21);
  x164 = (uint32_t)(x151 & UINT32_C(0x1fffff));
  x165 = (UINT16_C(0x3d1) * x163);
  x166 = (x163 << 10);
  x167 = (x162 + x166);
  x168 = (x167 >> 21);
  x169 = (uint32_t)(x167 & UINT32_C(0x1fffff));
  x170 = (x150 + x165);
  x171 = (x168 + x160);
  x172 = (uint32_t)(x170 >> 22);
  x173 = (uint32_t)(x170 & UINT32_C(0x3fffff));
  x174 = (x172 + x169);
  x175 = (x171 >> 21);
  x176 = (uint32_t)(x171 & UINT32_C(0x1fffff));
  x177 = (x175 + x159);
  x178 = (x177 >> 22);
  x179 = (uint32_t)(x177 & UINT32_C(0x3fffff));
  x180 = (x178 + x158);
  x181 = (x180 >> 21);
  x182 = (uint32_t)(x180 & UINT32_C(0x1fffff));
  x183 = (x181 + x157);
  x184 = (x183 >> 21);
  x185 = (uint32_t)(x183 & UINT32_C(0x1fffff));
  x186 = (x184 + x156);
  x187 = (x186 >> 22);
  x188 = (uint32_t)(x186 & UINT32_C(0x3fffff));
  x189 = (x187 + x155);
  x190 = (x189 >> 21);
  x191 = (uint32_t)(x189 & UINT32_C(0x1fffff));
  x192 = (x190 + x154);
  x193 = (x192 >> 21);
  x194 = (uint32_t)(x192 & UINT32_C(0x1fffff));
  x195 = (x193 + x153);
  x196 = (x195 >> 22);
  x197 = (uint32_t)(x195 & UINT32_C(0x3fffff));
  x198 = (x196 + x152);
  x199 = (x198 >> 21);
  x200 = (uint32_t)(x198 & UINT32_C(0x1fffff));
  x201 = (x199 + x164);
  x202 = (uint32_t)(x201 >> 21);
  x203 = (uint32_t)(x201 & UINT32_C(0x1fffff));
  x204 = (UINT16_C(0x3d1) * x202);
  x205 = (x202 << 10);
  x206 = (x174 + x205);
  x207 = (x206 >> 21);
  x208 = (x206 & UINT32_C(0x1fffff));
  x209 = (x173 + x204);
  x210 = (x207 + x176);
  x211 = (x209 >> 22);
  x212 = (x209 & UINT32_C(0x3fffff));
  x213 = (x211 + x208);
  out1[0] = x212;
  out1[1] = x213;
  out1[2] = x210;
  out1[3] = x179;
  out1[4] = x182;
  out1[5] = x185;
  out1[6] = x188;
  out1[7] = x191;
  out1[8] = x194;
  out1[9] = x197;
  out1[10] = x200;
  out1[11] = x203;
}

/*
 * The function fiat_secp256k1_carry_scmul_3 multiplies a field element by 3 and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (3 * eval arg1) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 */
static void fiat_secp256k1_carry_scmul_3(uint32_t out1[12], const uint32_t arg1[12]) {
  uint32_t x1;
  uint32_t x2;
  uint32_t x3;
  uint32_t x4;
  uint32_t x5;
  uint32_t x6;
  uint32_t x7;
  uint32_t x8;
  uint32_t x9;
  uint32_t x10;
  uint32_t x11;
  uint32_t x12;
  uint32_t x13;
  uint32_t x14;
  uint32_t x15;
  uint32_t x16;
  uint32_t x17;
  uint32_t x18;
  uint32_t x19;
  uint32_t x20;
  uint32_t x21;
  uint32_t x22;
  uint32_t x23;
  uint32_t x24;
  fiat_secp256k1_uint1 x25;
  uint32_t x26;
  uint32_t x27;
  uint32_t x28;
  uint32_t x29;
  uint32_t x30;
  uint32_t x31;
  uint32_t x32;
  uint32_t x33;
  uint32_t x34;
  uint32_t x35;
  uint32_t x36;
  uint32_t x37;
  uint32_t x38;
  uint32_t x39;
  uint32_t x40;
  uint32_t x41;
  uint32_t x42;
  uint32_t x43;
  uint32_t x44;
  uint32_t x45;
  uint32_t x46;
  uint32_t x47;
  uint32_t x48;
  uint32_t x49;
  uint32_t x50;
  uint32_t x51;
  uint32_t x52;
  uint32_t x53;
  uint32_t x54;
  fiat_secp256k1_uint1 x55;
  uint32_t x56;
  uint32_t x57;
  uint32_t x58;
  uint32_t x59;
  fiat_secp256k1_uint1 x60;
  uint32_t x61;
  uint32_t x62;
  uint32_t x63;
  fiat_secp256k1_uint1 x64;
  uint32_t x65;
  uint32_t x66;
  x1 = ((arg1[11]) * 0x3);
  x2 = ((arg1[10]) * 0x3);
  x3 = ((arg1[9]) * 0x3);
  x4 = ((arg1[8]) * 0x3);
  x5 = ((arg1[7]) * 0x3);
  x6 = ((arg1[6]) * 0x3);
  x7 = ((arg1[5]) * 0x3);
  x8 = ((arg1[4]) * 0x3);
  x9 = ((arg1[3]) * 0x3);
  x10 = ((arg1[2]) * 0x3);
  x11 = ((arg1[1]) * 0x3);
  x12 = ((arg1[0]) * 0x3);
  x13 = (x12 >> 22);
  x14 = (x12 & UINT32_C(0x3fffff));
  x15 = (x13 + x11);
  x16 = (x1 >> 21);
  x17 = (x1 & UINT32_C(0x1fffff));
  x18 = (UINT16_C(0x3d1) * x16);
  x19 = (x16 << 10);
  x20 = (x15 + x19);
  x21 = (x20 >> 21);
  x22 = (x20 & UINT32_C(0x1fffff));
  x23 = (x14 + x18);
  x24 = (x21 + x10);
  x25 = (fiat_secp256k1_uint1)(x23 >> 22);
  x26 = (x23 & UINT32_C(0x3fffff));
  x27 = (x25 + x22);
  x28 = (x24 >> 21);
  x29 = (x24 & UINT32_C(0x1fffff));
  x30 = (x28 + x9);
  x31 = (x30 >> 22);
  x32 = (x30 & UINT32_C(0x3fffff));
  x33 = (x31 + x8);
  x34 = (x33 >> 21);
  x35 = (x33 & UINT32_C(0x1fffff));
  x36 = (x34 + x7);
  x37 = (x36 >> 21);
  x38 = (x36 & UINT32_C(0x1fffff));
  x39 = (x37 + x6);
  x40 = (x39 >> 22);
  x41 = (x39 & UINT32_C(0x3fffff));
  x42 = (x40 + x5);
  x43 = (x42 >> 21);
  x44 = (x42 & UINT32_C(0x1fffff));
  x45 = (x43 + x4);
  x46 = (x45 >> 21);
  x47 = (x45 & UINT32_C(0x1fffff));
  x48 = (x46 + x3);
  x49 = (x48 >> 22);
  x50 = (x48 & UINT32_C(0x3fffff));
  x51 = (x49 + x2);
  x52 = (x51 >> 21);
  x53 = (x51 & UINT32_C(0x1fffff));
  x54 = (x52 + x17);
  x55 = (fiat_secp256k1_uint1)(x54 >> 21);
  x56 = (x54 & UINT32_C(0x1fffff));
  x57 = (UINT16_C(0x3d1) * (uint32_t)x55);
  x58 = ((uint32_t)x55 << 10);
  x59 = (x27 + x58);
  x60 = (fiat_secp256k1_uint1)(x59 >> 21);
  x61 = (x59 & UINT32_C(0x1fffff));
  x62 = (x26 + x57);
  x63 = (x60 + x29);
  x64 = (fiat_secp256k1_uint1)(x62 >> 22);
  x65 = (x62 & UINT32_C(0x3fffff));
  x66 = (x64 + x61);
  out1[0] = x65;
  out1[1] = x66;
  out1[2] = x63;
  out1[3] = x32;
  out1[4] = x35;
  out1[5] = x38;
  out1[6] = x41;
  out1[7] = x44;
  out1[8] = x47;
  out1[9] = x50;
  out1[10] = x53;
  out1[11] = x56;
}

/*
 * The function fiat_secp256k1_carry_scmul_4 multiplies a field element by 4 and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (4 * eval arg1) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 */
static void fiat_secp256k1_carry_scmul_4(uint32_t out1[12], const uint32_t arg1[12]) {
  uint32_t x1;
  uint32_t x2;
  uint32_t x3;
  uint32_t x4;
  uint32_t x5;
  uint32_t x6;
  uint32_t x7;
  uint32_t x8;
  uint32_t x9;
  uint32_t x10;
  uint32_t x11;
  uint32_t x12;
  uint32_t x13;
  uint32_t x14;
  uint32_t x15;
  uint32_t x16;
  uint32_t x17;
  uint32_t x18;
  uint32_t x19;
  uint32_t x20;
  uint32_t x21;
  uint32_t x22;
  uint32_t x23;
  uint32_t x24;
  fiat_secp256k1_uint1 x25;
  uint32_t x26;
  uint32_t x27;
  uint32_t x28;
  uint32_t x29;
  uint32_t x30;
  uint32_t x31;
  uint32_t x32;
  uint32_t x33;
  uint32_t x34;
  uint32_t x35;
  uint32_t x36;
  uint32_t x37;
  uint32_t x38;
  uint32_t x39;
  uint32_t x40;
  uint32_t x41;
  uint32_t x42;
  uint32_t x43;
  uint32_t x44;
  uint32_t x45;
  uint32_t x46;
  uint32_t x47;
  uint32_t x48;
  uint32_t x49;
  uint32_t x50;
  uint32_t x51;
  uint32_t x52;
  uint32_t x53;
  uint32_t x54;
  fiat_secp256k1_uint1 x55;
  uint32_t x56;
  uint32_t x57;
  uint32_t x58;
  uint32_t x59;
  fiat_secp256k1_uint1 x60;
  uint32_t x61;
  uint32_t x62;
  uint32_t x63;
  fiat_secp256k1_uint1 x64;
  uint32_t x65;
  uint32_t x66;
  x1 = ((arg1[11]) << 2);
  x2 = ((arg1[10]) << 2);
  x3 = ((arg1[9]) << 2);
  x4 = ((arg1[8]) << 2);
  x5 = ((arg1[7]) << 2);
  x6 = ((arg1[6]) << 2);
  x7 = ((arg1[5]) << 2);
  x8 = ((arg1[4]) << 2);
  x9 = ((arg1[3]) << 2);
  x10 = ((arg1[2]) << 2);
  x11 = ((arg1[1]) << 2);
  x12 = ((arg1[0]) << 2);
  x13 = (x12 >> 22);
  x14 = (x12 & UINT32_C(0x3fffff));
  x15 = (x13 + x11);
  x16 = (x1 >> 21);
  x17 = (x1 & UINT32_C(0x1fffff));
  x18 = (UINT16_C(0x3d1) * x16);
  x19 = (x16 << 10);
  x20 = (x15 + x19);
  x21 = (x20 >> 21);
  x22 = (x20 & UINT32_C(0x1fffff));
  x23 = (x14 + x18);
  x24 = (x21 + x10);
  x25 = (fiat_secp256k1_uint1)(x23 >> 22);
  x26 = (x23 & UINT32_C(0x3fffff));
  x27 = (x25 + x22);
  x28 = (x24 >> 21);
  x29 = (x24 & UINT32_C(0x1fffff));
  x30 = (x28 + x9);
  x31 = (x30 >> 22);
  x32 = (x30 & UINT32_C(0x3fffff));
  x33 = (x31 + x8);
  x34 = (x33 >> 21);
  x35 = (x33 & UINT32_C(0x1fffff));
  x36 = (x34 + x7);
  x37 = (x36 >> 21);
  x38 = (x36 & UINT32_C(0x1fffff));
  x39 = (x37 + x6);
  x40 = (x39 >> 22);
  x41 = (x39 & UINT32_C(0x3fffff));
  x42 = (x40 + x5);
  x43 = (x42 >> 21);
  x44 = (x42 & UINT32_C(0x1fffff));
  x45 = (x43 + x4);
  x46 = (x45 >> 21);
  x47 = (x45 & UINT32_C(0x1fffff));
  x48 = (x46 + x3);
  x49 = (x48 >> 22);
  x50 = (x48 & UINT32_C(0x3fffff));
  x51 = (x49 + x2);
  x52 = (x51 >> 21);
  x53 = (x51 & UINT32_C(0x1fffff));
  x54 = (x52 + x17);
  x55 = (fiat_secp256k1_uint1)(x54 >> 21);
  x56 = (x54 & UINT32_C(0x1fffff));
  x57 = (UINT16_C(0x3d1) * (uint32_t)x55);
  x58 = ((uint32_t)x55 << 10);
  x59 = (x27 + x58);
  x60 = (fiat_secp256k1_uint1)(x59 >> 21);
  x61 = (x59 & UINT32_C(0x1fffff));
  x62 = (x26 + x57);
  x63 = (x60 + x29);
  x64 = (fiat_secp256k1_uint1)(x62 >> 22);
  x65 = (x62 & UINT32_C(0x3fffff));
  x66 = (x64 + x61);
  out1[0] = x65;
  out1[1] = x66;
  out1[2] = x63;
  out1[3] = x32;
  out1[4] = x35;
  out1[5] = x38;
  out1[6] = x41;
  out1[7] = x44;
  out1[8] = x47;
  out1[9] = x50;
  out1[10] = x53;
  out1[11] = x56;
}

/*
 * The function fiat_secp256k1_carry_scmul_8 multiplies a field element by 8 and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (8 * eval arg1) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c], [0x0 ~> 0xd33335], [0x0 ~> 0x69999c], [0x0 ~> 0x69999c]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 */
static void fiat_secp256k1_carry_scmul_8(uint32_t out1[12], const uint32_t arg1[12]) {
  uint32_t x1;
  uint32_t x2;
  uint32_t x3;
  uint32_t x4;
  uint32_t x5;
  uint32_t x6;
  uint32_t x7;
  uint32_t x8;
  uint32_t x9;
  uint32_t x10;
  uint32_t x11;
  uint32_t x12;
  uint32_t x13;
  uint32_t x14;
  uint32_t x15;
  uint32_t x16;
  uint32_t x17;
  uint32_t x18;
  uint32_t x19;
  uint32_t x20;
  uint32_t x21;
  uint32_t x22;
  uint32_t x23;
  uint32_t x24;
  fiat_secp256k1_uint1 x25;
  uint32_t x26;
  uint32_t x27;
  uint32_t x28;
  uint32_t x29;
  uint32_t x30;
  uint32_t x31;
  uint32_t x32;
  uint32_t x33;
  uint32_t x34;
  uint32_t x35;
  uint32_t x36;
  uint32_t x37;
  uint32_t x38;
  uint32_t x39;
  uint32_t x40;
  uint32_t x41;
  uint32_t x42;
  uint32_t x43;
  uint32_t x44;
  uint32_t x45;
  uint32_t x46;
  uint32_t x47;
  uint32_t x48;
  uint32_t x49;
  uint32_t x50;
  uint32_t x51;
  uint32_t x52;
  uint32_t x53;
  uint32_t x54;
  fiat_secp256k1_uint1 x55;
  uint32_t x56;
  uint32_t x57;
  uint32_t x58;
  uint32_t x59;
  fiat_secp256k1_uint1 x60;
  uint32_t x61;
  uint32_t x62;
  uint32_t x63;
  fiat_secp256k1_uint1 x64;
  uint32_t x65;
  uint32_t x66;
  x1 = ((arg1[11]) << 3);
  x2 = ((arg1[10]) << 3);
  x3 = ((arg1[9]) << 3);
  x4 = ((arg1[8]) << 3);
  x5 = ((arg1[7]) << 3);
  x6 = ((arg1[6]) << 3);
  x7 = ((arg1[5]) << 3);
  x8 = ((arg1[4]) << 3);
  x9 = ((arg1[3]) << 3);
  x10 = ((arg1[2]) << 3);
  x11 = ((arg1[1]) << 3);
  x12 = ((arg1[0]) << 3);
  x13 = (x12 >> 22);
  x14 = (x12 & UINT32_C(0x3fffff));
  x15 = (x13 + x11);
  x16 = (x1 >> 21);
  x17 = (x1 & UINT32_C(0x1fffff));
  x18 = (UINT16_C(0x3d1) * x16);
  x19 = (x16 << 10);
  x20 = (x15 + x19);
  x21 = (x20 >> 21);
  x22 = (x20 & UINT32_C(0x1fffff));
  x23 = (x14 + x18);
  x24 = (x21 + x10);
  x25 = (fiat_secp256k1_uint1)(x23 >> 22);
  x26 = (x23 & UINT32_C(0x3fffff));
  x27 = (x25 + x22);
  x28 = (x24 >> 21);
  x29 = (x24 & UINT32_C(0x1fffff));
  x30 = (x28 + x9);
  x31 = (x30 >> 22);
  x32 = (x30 & UINT32_C(0x3fffff));
  x33 = (x31 + x8);
  x34 = (x33 >> 21);
  x35 = (x33 & UINT32_C(0x1fffff));
  x36 = (x34 + x7);
  x37 = (x36 >> 21);
  x38 = (x36 & UINT32_C(0x1fffff));
  x39 = (x37 + x6);
  x40 = (x39 >> 22);
  x41 = (x39 & UINT32_C(0x3fffff));
  x42 = (x40 + x5);
  x43 = (x42 >> 21);
  x44 = (x42 & UINT32_C(0x1fffff));
  x45 = (x43 + x4);
  x46 = (x45 >> 21);
  x47 = (x45 & UINT32_C(0x1fffff));
  x48 = (x46 + x3);
  x49 = (x48 >> 22);
  x50 = (x48 & UINT32_C(0x3fffff));
  x51 = (x49 + x2);
  x52 = (x51 >> 21);
  x53 = (x51 & UINT32_C(0x1fffff));
  x54 = (x52 + x17);
  x55 = (fiat_secp256k1_uint1)(x54 >> 21);
  x56 = (x54 & UINT32_C(0x1fffff));
  x57 = (UINT16_C(0x3d1) * (uint32_t)x55);
  x58 = ((uint32_t)x55 << 10);
  x59 = (x27 + x58);
  x60 = (fiat_secp256k1_uint1)(x59 >> 21);
  x61 = (x59 & UINT32_C(0x1fffff));
  x62 = (x26 + x57);
  x63 = (x60 + x29);
  x64 = (fiat_secp256k1_uint1)(x62 >> 22);
  x65 = (x62 & UINT32_C(0x3fffff));
  x66 = (x64 + x61);
  out1[0] = x65;
  out1[1] = x66;
  out1[2] = x63;
  out1[3] = x32;
  out1[4] = x35;
  out1[5] = x38;
  out1[6] = x41;
  out1[7] = x44;
  out1[8] = x47;
  out1[9] = x50;
  out1[10] = x53;
  out1[11] = x56;
}

/*
 * The function fiat_secp256k1_selectznz is a multi-limb conditional select.
 * Postconditions:
 *   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
static void fiat_secp256k1_selectznz(uint32_t out1[12], fiat_secp256k1_uint1 arg1, const uint32_t arg2[12], const uint32_t arg3[12]) {
  uint32_t x1;
  uint32_t x2;
  uint32_t x3;
  uint32_t x4;
  uint32_t x5;
  uint32_t x6;
  uint32_t x7;
  uint32_t x8;
  uint32_t x9;
  uint32_t x10;
  uint32_t x11;
  uint32_t x12;
  fiat_secp256k1_cmovznz_u32(&x1, arg1, (arg2[0]), (arg3[0]));
  fiat_secp256k1_cmovznz_u32(&x2, arg1, (arg2[1]), (arg3[1]));
  fiat_secp256k1_cmovznz_u32(&x3, arg1, (arg2[2]), (arg3[2]));
  fiat_secp256k1_cmovznz_u32(&x4, arg1, (arg2[3]), (arg3[3]));
  fiat_secp256k1_cmovznz_u32(&x5, arg1, (arg2[4]), (arg3[4]));
  fiat_secp256k1_cmovznz_u32(&x6, arg1, (arg2[5]), (arg3[5]));
  fiat_secp256k1_cmovznz_u32(&x7, arg1, (arg2[6]), (arg3[6]));
  fiat_secp256k1_cmovznz_u32(&x8, arg1, (arg2[7]), (arg3[7]));
  fiat_secp256k1_cmovznz_u32(&x9, arg1, (arg2[8]), (arg3[8]));
  fiat_secp256k1_cmovznz_u32(&x10, arg1, (arg2[9]), (arg3[9]));
  fiat_secp256k1_cmovznz_u32(&x11, arg1, (arg2[10]), (arg3[10]));
  fiat_secp256k1_cmovznz_u32(&x12, arg1, (arg2[11]), (arg3[11]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
  out1[10] = x11;
  out1[11] = x12;
}

/*
 * The function fiat_secp256k1_to_bytes serializes a field element to bytes in little-endian order.
 * Postconditions:
 *   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..31]
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 */
static void fiat_secp256k1_to_bytes(uint8_t out1[32], const uint32_t arg1[12]) {
  uint32_t x1;
  fiat_secp256k1_uint1 x2;
  uint32_t x3;
  fiat_secp256k1_uint1 x4;
  uint32_t x5;
  fiat_secp256k1_uint1 x6;
  uint32_t x7;
  fiat_secp256k1_uint1 x8;
  uint32_t x9;
  fiat_secp256k1_uint1 x10;
  uint32_t x11;
  fiat_secp256k1_uint1 x12;
  uint32_t x13;
  fiat_secp256k1_uint1 x14;
  uint32_t x15;
  fiat_secp256k1_uint1 x16;
  uint32_t x17;
  fiat_secp256k1_uint1 x18;
  uint32_t x19;
  fiat_secp256k1_uint1 x20;
  uint32_t x21;
  fiat_secp256k1_uint1 x22;
  uint32_t x23;
  fiat_secp256k1_uint1 x24;
  uint32_t x25;
  uint32_t x26;
  fiat_secp256k1_uint1 x27;
  uint32_t x28;
  fiat_secp256k1_uint1 x29;
  uint32_t x30;
  fiat_secp256k1_uint1 x31;
  uint32_t x32;
  fiat_secp256k1_uint1 x33;
  uint32_t x34;
  fiat_secp256k1_uint1 x35;
  uint32_t x36;
  fiat_secp256k1_uint1 x37;
  uint32_t x38;
  fiat_secp256k1_uint1 x39;
  uint32_t x40;
  fiat_secp256k1_uint1 x41;
  uint32_t x42;
  fiat_secp256k1_uint1 x43;
  uint32_t x44;
  fiat_secp256k1_uint1 x45;
  uint32_t x46;
  fiat_secp256k1_uint1 x47;
  uint32_t x48;
  fiat_secp256k1_uint1 x49;
  uint32_t x50;
  uint32_t x51;
  uint32_t x52;
  uint32_t x53;
  uint32_t x54;
  uint32_t x55;
  uint32_t x56;
  uint32_t x57;
  uint8_t x58;
  uint32_t x59;
  uint8_t x60;
  uint8_t x61;
  uint32_t x62;
  uint8_t x63;
  uint32_t x64;
  uint8_t x65;
  uint32_t x66;
  uint8_t x67;
  uint8_t x68;
  uint32_t x69;
  uint8_t x70;
  uint32_t x71;
  uint8_t x72;
  uint8_t x73;
  uint8_t x74;
  uint32_t x75;
  uint8_t x76;
  uint8_t x77;
  uint32_t x78;
  uint8_t x79;
  uint32_t x80;
  uint8_t x81;
  uint32_t x82;
  uint8_t x83;
  uint8_t x84;
  uint32_t x85;
  uint8_t x86;
  uint32_t x87;
  uint8_t x88;
  uint8_t x89;
  uint8_t x90;
  uint32_t x91;
  uint8_t x92;
  uint8_t x93;
  uint32_t x94;
  uint8_t x95;
  uint32_t x96;
  uint8_t x97;
  uint32_t x98;
  uint8_t x99;
  uint8_t x100;
  uint32_t x101;
  uint8_t x102;
  uint32_t x103;
  uint8_t x104;
  uint8_t x105;
  uint8_t x106;
  uint32_t x107;
  uint8_t x108;
  uint8_t x109;
  uint32_t x110;
  uint8_t x111;
  uint32_t x112;
  uint8_t x113;
  uint32_t x114;
  uint8_t x115;
  uint8_t x116;
  uint32_t x117;
  uint8_t x118;
  uint32_t x119;
  uint8_t x120;
  uint8_t x121;
  fiat_secp256k1_subborrowx_u22(&x1, &x2, 0x0, (arg1[0]), UINT32_C(0x3ffc2f));
  fiat_secp256k1_subborrowx_u21(&x3, &x4, x2, (arg1[1]), UINT32_C(0x1ffbff));
  fiat_secp256k1_subborrowx_u21(&x5, &x6, x4, (arg1[2]), UINT32_C(0x1fffff));
  fiat_secp256k1_subborrowx_u22(&x7, &x8, x6, (arg1[3]), UINT32_C(0x3fffff));
  fiat_secp256k1_subborrowx_u21(&x9, &x10, x8, (arg1[4]), UINT32_C(0x1fffff));
  fiat_secp256k1_subborrowx_u21(&x11, &x12, x10, (arg1[5]), UINT32_C(0x1fffff));
  fiat_secp256k1_subborrowx_u22(&x13, &x14, x12, (arg1[6]), UINT32_C(0x3fffff));
  fiat_secp256k1_subborrowx_u21(&x15, &x16, x14, (arg1[7]), UINT32_C(0x1fffff));
  fiat_secp256k1_subborrowx_u21(&x17, &x18, x16, (arg1[8]), UINT32_C(0x1fffff));
  fiat_secp256k1_subborrowx_u22(&x19, &x20, x18, (arg1[9]), UINT32_C(0x3fffff));
  fiat_secp256k1_subborrowx_u21(&x21, &x22, x20, (arg1[10]), UINT32_C(0x1fffff));
  fiat_secp256k1_subborrowx_u21(&x23, &x24, x22, (arg1[11]), UINT32_C(0x1fffff));
  fiat_secp256k1_cmovznz_u32(&x25, x24, 0x0, UINT32_C(0xffffffff));
  fiat_secp256k1_addcarryx_u22(&x26, &x27, 0x0, x1, (x25 & UINT32_C(0x3ffc2f)));
  fiat_secp256k1_addcarryx_u21(&x28, &x29, x27, x3, (x25 & UINT32_C(0x1ffbff)));
  fiat_secp256k1_addcarryx_u21(&x30, &x31, x29, x5, (x25 & UINT32_C(0x1fffff)));
  fiat_secp256k1_addcarryx_u22(&x32, &x33, x31, x7, (x25 & UINT32_C(0x3fffff)));
  fiat_secp256k1_addcarryx_u21(&x34, &x35, x33, x9, (x25 & UINT32_C(0x1fffff)));
  fiat_secp256k1_addcarryx_u21(&x36, &x37, x35, x11, (x25 & UINT32_C(0x1fffff)));
  fiat_secp256k1_addcarryx_u22(&x38, &x39, x37, x13, (x25 & UINT32_C(0x3fffff)));
  fiat_secp256k1_addcarryx_u21(&x40, &x41, x39, x15, (x25 & UINT32_C(0x1fffff)));
  fiat_secp256k1_addcarryx_u21(&x42, &x43, x41, x17, (x25 & UINT32_C(0x1fffff)));
  fiat_secp256k1_addcarryx_u22(&x44, &x45, x43, x19, (x25 & UINT32_C(0x3fffff)));
  fiat_secp256k1_addcarryx_u21(&x46, &x47, x45, x21, (x25 & UINT32_C(0x1fffff)));
  fiat_secp256k1_addcarryx_u21(&x48, &x49, x47, x23, (x25 & UINT32_C(0x1fffff)));
  x50 = (x48 << 3);
  x51 = (x46 << 6);
  x52 = (x42 << 3);
  x53 = (x40 << 6);
  x54 = (x36 << 3);
  x55 = (x34 << 6);
  x56 = (x30 << 3);
  x57 = (x28 << 6);
  x58 = (uint8_t)(x26 & UINT8_C(0xff));
  x59 = (x26 >> 8);
  x60 = (uint8_t)(x59 & UINT8_C(0xff));
  x61 = (uint8_t)(x59 >> 8);
  x62 = (x57 + (uint32_t)x61);
  x63 = (uint8_t)(x62 & UINT8_C(0xff));
  x64 = (x62 >> 8);
  x65 = (uint8_t)(x64 & UINT8_C(0xff));
  x66 = (x64 >> 8);
  x67 = (uint8_t)(x66 & UINT8_C(0xff));
  x68 = (uint8_t)(x66 >> 8);
  x69 = (x56 + (uint32_t)x68);
  x70 = (uint8_t)(x69 & UINT8_C(0xff));
  x71 = (x69 >> 8);
  x72 = (uint8_t)(x71 & UINT8_C(0xff));
  x73 = (uint8_t)(x71 >> 8);
  x74 = (uint8_t)(x32 & UINT8_C(0xff));
  x75 = (x32 >> 8);
  x76 = (uint8_t)(x75 & UINT8_C(0xff));
  x77 = (uint8_t)(x75 >> 8);
  x78 = (x55 + (uint32_t)x77);
  x79 = (uint8_t)(x78 & UINT8_C(0xff));
  x80 = (x78 >> 8);
  x81 = (uint8_t)(x80 & UINT8_C(0xff));
  x82 = (x80 >> 8);
  x83 = (uint8_t)(x82 & UINT8_C(0xff));
  x84 = (uint8_t)(x82 >> 8);
  x85 = (x54 + (uint32_t)x84);
  x86 = (uint8_t)(x85 & UINT8_C(0xff));
  x87 = (x85 >> 8);
  x88 = (uint8_t)(x87 & UINT8_C(0xff));
  x89 = (uint8_t)(x87 >> 8);
  x90 = (uint8_t)(x38 & UINT8_C(0xff));
  x91 = (x38 >> 8);
  x92 = (uint8_t)(x91 & UINT8_C(0xff));
  x93 = (uint8_t)(x91 >> 8);
  x94 = (x53 + (uint32_t)x93);
  x95 = (uint8_t)(x94 & UINT8_C(0xff));
  x96 = (x94 >> 8);
  x97 = (uint8_t)(x96 & UINT8_C(0xff));
  x98 = (x96 >> 8);
  x99 = (uint8_t)(x98 & UINT8_C(0xff));
  x100 = (uint8_t)(x98 >> 8);
  x101 = (x52 + (uint32_t)x100);
  x102 = (uint8_t)(x101 & UINT8_C(0xff));
  x103 = (x101 >> 8);
  x104 = (uint8_t)(x103 & UINT8_C(0xff));
  x105 = (uint8_t)(x103 >> 8);
  x106 = (uint8_t)(x44 & UINT8_C(0xff));
  x107 = (x44 >> 8);
  x108 = (uint8_t)(x107 & UINT8_C(0xff));
  x109 = (uint8_t)(x107 >> 8);
  x110 = (x51 + (uint32_t)x109);
  x111 = (uint8_t)(x110 & UINT8_C(0xff));
  x112 = (x110 >> 8);
  x113 = (uint8_t)(x112 & UINT8_C(0xff));
  x114 = (x112 >> 8);
  x115 = (uint8_t)(x114 & UINT8_C(0xff));
  x116 = (uint8_t)(x114 >> 8);
  x117 = (x50 + (uint32_t)x116);
  x118 = (uint8_t)(x117 & UINT8_C(0xff));
  x119 = (x117 >> 8);
  x120 = (uint8_t)(x119 & UINT8_C(0xff));
  x121 = (uint8_t)(x119 >> 8);
  out1[0] = x58;
  out1[1] = x60;
  out1[2] = x63;
  out1[3] = x65;
  out1[4] = x67;
  out1[5] = x70;
  out1[6] = x72;
  out1[7] = x73;
  out1[8] = x74;
  out1[9] = x76;
  out1[10] = x79;
  out1[11] = x81;
  out1[12] = x83;
  out1[13] = x86;
  out1[14] = x88;
  out1[15] = x89;
  out1[16] = x90;
  out1[17] = x92;
  out1[18] = x95;
  out1[19] = x97;
  out1[20] = x99;
  out1[21] = x102;
  out1[22] = x104;
  out1[23] = x105;
  out1[24] = x106;
  out1[25] = x108;
  out1[26] = x111;
  out1[27] = x113;
  out1[28] = x115;
  out1[29] = x118;
  out1[30] = x120;
  out1[31] = x121;
}

/*
 * The function fiat_secp256k1_from_bytes deserializes a field element from bytes in little-endian order.
 * Postconditions:
 *   eval out1 mod m = bytes_eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334], [0x0 ~> 0x466667], [0x0 ~> 0x233334], [0x0 ~> 0x233334]]
 */
static void fiat_secp256k1_from_bytes(uint32_t out1[12], const uint8_t arg1[32]) {
  uint32_t x1;
  uint32_t x2;
  uint32_t x3;
  uint32_t x4;
  uint32_t x5;
  uint32_t x6;
  uint32_t x7;
  uint8_t x8;
  uint32_t x9;
  uint32_t x10;
  uint32_t x11;
  uint32_t x12;
  uint32_t x13;
  uint32_t x14;
  uint32_t x15;
  uint8_t x16;
  uint32_t x17;
  uint32_t x18;
  uint32_t x19;
  uint32_t x20;
  uint32_t x21;
  uint32_t x22;
  uint32_t x23;
  uint8_t x24;
  uint32_t x25;
  uint32_t x26;
  uint32_t x27;
  uint32_t x28;
  uint32_t x29;
  uint32_t x30;
  uint32_t x31;
  uint8_t x32;
  uint32_t x33;
  uint32_t x34;
  uint32_t x35;
  uint8_t x36;
  uint32_t x37;
  uint32_t x38;
  uint32_t x39;
  uint32_t x40;
  uint8_t x41;
  uint32_t x42;
  uint32_t x43;
  uint32_t x44;
  uint32_t x45;
  uint32_t x46;
  uint8_t x47;
  uint32_t x48;
  uint32_t x49;
  uint32_t x50;
  uint32_t x51;
  uint8_t x52;
  uint32_t x53;
  uint32_t x54;
  uint32_t x55;
  uint32_t x56;
  uint32_t x57;
  uint8_t x58;
  uint32_t x59;
  uint32_t x60;
  uint32_t x61;
  uint32_t x62;
  uint8_t x63;
  uint32_t x64;
  uint32_t x65;
  uint32_t x66;
  uint32_t x67;
  uint32_t x68;
  uint8_t x69;
  uint32_t x70;
  uint32_t x71;
  uint32_t x72;
  uint32_t x73;
  uint8_t x74;
  uint32_t x75;
  uint32_t x76;
  x1 = ((uint32_t)(arg1[31]) << 13);
  x2 = ((uint32_t)(arg1[30]) << 5);
  x3 = ((uint32_t)(arg1[29]) << 18);
  x4 = ((uint32_t)(arg1[28]) << 10);
  x5 = ((uint32_t)(arg1[27]) << 2);
  x6 = ((uint32_t)(arg1[26]) << 16);
  x7 = ((uint32_t)(arg1[25]) << 8);
  x8 = (arg1[24]);
  x9 = ((uint32_t)(arg1[23]) << 13);
  x10 = ((uint32_t)(arg1[22]) << 5);
  x11 = ((uint32_t)(arg1[21]) << 18);
  x12 = ((uint32_t)(arg1[20]) << 10);
  x13 = ((uint32_t)(arg1[19]) << 2);
  x14 = ((uint32_t)(arg1[18]) << 16);
  x15 = ((uint32_t)(arg1[17]) << 8);
  x16 = (arg1[16]);
  x17 = ((uint32_t)(arg1[15]) << 13);
  x18 = ((uint32_t)(arg1[14]) << 5);
  x19 = ((uint32_t)(arg1[13]) << 18);
  x20 = ((uint32_t)(arg1[12]) << 10);
  x21 = ((uint32_t)(arg1[11]) << 2);
  x22 = ((uint32_t)(arg1[10]) << 16);
  x23 = ((uint32_t)(arg1[9]) << 8);
  x24 = (arg1[8]);
  x25 = ((uint32_t)(arg1[7]) << 13);
  x26 = ((uint32_t)(arg1[6]) << 5);
  x27 = ((uint32_t)(arg1[5]) << 18);
  x28 = ((uint32_t)(arg1[4]) << 10);
  x29 = ((uint32_t)(arg1[3]) << 2);
  x30 = ((uint32_t)(arg1[2]) << 16);
  x31 = ((uint32_t)(arg1[1]) << 8);
  x32 = (arg1[0]);
  x33 = (x31 + (uint32_t)x32);
  x34 = (x30 + x33);
  x35 = (x34 & UINT32_C(0x3fffff));
  x36 = (uint8_t)(x34 >> 22);
  x37 = (x29 + (uint32_t)x36);
  x38 = (x28 + x37);
  x39 = (x27 + x38);
  x40 = (x39 & UINT32_C(0x1fffff));
  x41 = (uint8_t)(x39 >> 21);
  x42 = (x26 + (uint32_t)x41);
  x43 = (x25 + x42);
  x44 = (x23 + (uint32_t)x24);
  x45 = (x22 + x44);
  x46 = (x45 & UINT32_C(0x3fffff));
  x47 = (uint8_t)(x45 >> 22);
  x48 = (x21 + (uint32_t)x47);
  x49 = (x20 + x48);
  x50 = (x19 + x49);
  x51 = (x50 & UINT32_C(0x1fffff));
  x52 = (uint8_t)(x50 >> 21);
  x53 = (x18 + (uint32_t)x52);
  x54 = (x17 + x53);
  x55 = (x15 + (uint32_t)x16);
  x56 = (x14 + x55);
  x57 = (x56 & UINT32_C(0x3fffff));
  x58 = (uint8_t)(x56 >> 22);
  x59 = (x13 + (uint32_t)x58);
  x60 = (x12 + x59);
  x61 = (x11 + x60);
  x62 = (x61 & UINT32_C(0x1fffff));
  x63 = (uint8_t)(x61 >> 21);
  x64 = (x10 + (uint32_t)x63);
  x65 = (x9 + x64);
  x66 = (x7 + (uint32_t)x8);
  x67 = (x6 + x66);
  x68 = (x67 & UINT32_C(0x3fffff));
  x69 = (uint8_t)(x67 >> 22);
  x70 = (x5 + (uint32_t)x69);
  x71 = (x4 + x70);
  x72 = (x3 + x71);
  x73 = (x72 & UINT32_C(0x1fffff));
  x74 = (uint8_t)(x72 >> 21);
  x75 = (x2 + (uint32_t)x74);
  x76 = (x1 + x75);
  out1[0] = x35;
  out1[1] = x40;
  out1[2] = x43;
  out1[3] = x46;
  out1[4] = x51;
  out1[5] = x54;
  out1[6] = x57;
  out1[7] = x62;
  out1[8] = x65;
  out1[9] = x68;
  out1[10] = x73;
  out1[11] = x76;
}
